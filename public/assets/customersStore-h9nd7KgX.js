import{R as e,S as t,T as n,U as r,V as i,a1 as a,ab as o,ax as s}from"./index-DAYJef18.js";import{b as c}from"./tableUtils-DLdmKRvi.js";var l=class{baseUrl=`/customers`;async getCustomers(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}?${n}`,{loadingMessage:`Loading customers...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching customers:`,e),e}}async getCustomer(e){try{let n=await t(`${this.baseUrl}/${e}`,{loadingMessage:`Loading customer...`});return n.data.data}catch(e){throw console.error(`Error fetching customer:`,e),e}}async createCustomer(e){try{let t=await r(this.baseUrl,e,{loadingMessage:`Creating customer...`,showSuccessNotification:!0,successMessage:`Customer created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer:`,e),e}}async createCustomerWithFiles(e){try{console.log(`reach service`);let t=await r(this.baseUrl,e,{loadingMessage:`Creating customer...`,showSuccessNotification:!0,successMessage:`Customer created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer with files:`,e),e}}async updateCustomer(e,t){try{let n=await i(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer...`,showSuccessNotification:!0,successMessage:`Customer updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer:`,e),e}}async updateCustomerWithFiles(e,t){try{let n=await r(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer...`,showSuccessNotification:!0,successMessage:`Customer updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer with files:`,e),e}}async deleteCustomer(t){try{await e(`${this.baseUrl}/${t}`,{loadingMessage:`Deleting customer...`,showSuccessNotification:!0,successMessage:`Customer deleted successfully`})}catch(e){throw console.error(`Error deleting customer:`,e),e}}async getTrashedCustomers(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}/trashed?${n}`,{loadingMessage:`Loading trashed customers...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed customers:`,e),e}}async restoreCustomer(e){try{let t=await n(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring customer...`,showSuccessNotification:!0,successMessage:`Customer restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring customer:`,e),e}}async forceDeleteCustomer(t){try{await e(`${this.baseUrl}/${t}/force-delete`,{loadingMessage:`Permanently deleting customer...`,showSuccessNotification:!0,successMessage:`Customer permanently deleted`})}catch(e){throw console.error(`Error permanently deleting customer:`,e),e}}async getCustomersForSelect(){try{let e=await t(`${this.baseUrl}`,{showLoading:!1}),n=e.data.data;return n.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1,code:e.code,balance:e.current_balance}))}catch(e){throw console.error(`Error fetching customers for select:`,e),e}}async getCustomerStats(){try{let e=await t(`${this.baseUrl}/stats`,{loadingMessage:`Loading customer statistics...`});return e.data.data}catch(e){throw console.error(`Error fetching customer statistics:`,e),e}}async exportCustomers(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}/export?${n}`,{loadingMessage:`Exporting customers...`,responseType:`blob`});return r.data}catch(e){throw console.error(`Error exporting customers:`,e),e}}async getNextCustomerCode(){try{let e=await t(`${this.baseUrl}/next-code`,{showLoading:!1});return e.data.data.code}catch(e){throw console.error(`Error fetching next customer code:`,e),e}}async getSalespersons(){try{let e=await t(`${this.baseUrl}/salespersons`,{showLoading:!1});return e.data.data}catch(e){throw console.error(`Error fetching salespersons:`,e),e}}async searchCustomers(e){try{let n=await t(`${this.baseUrl}/search?query=${encodeURIComponent(e)}`,{showLoading:!1});return n.data.data}catch(e){throw console.error(`Error searching customers:`,e),e}}async getCustomersByType(e){try{let n=await t(`${this.baseUrl}/by-type/${e}`,{loadingMessage:`Loading customers by type...`});return n.data.data}catch(e){throw console.error(`Error fetching customers by type:`,e),e}}async getCustomersByZone(e){try{let n=await t(`${this.baseUrl}/by-zone/${e}`,{loadingMessage:`Loading customers by zone...`});return n.data.data}catch(e){throw console.error(`Error fetching customers by zone:`,e),e}}async getCustomersBySalesperson(e){try{let n=await t(`${this.baseUrl}/by-salesperson/${e}`,{loadingMessage:`Loading customers by salesperson...`});return n.data.data}catch(e){throw console.error(`Error fetching customers by salesperson:`,e),e}}async updateCustomerBalance(e,t){try{let n=await r(`${this.baseUrl}/${e}/balance`,t,{loadingMessage:`Updating customer balance...`,showSuccessNotification:!0,successMessage:`Customer balance updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer balance:`,e),e}}async getCustomerBalanceHistory(e){try{let n=await t(`${this.baseUrl}/${e}/balance-history`,{loadingMessage:`Loading balance history...`});return n.data.data}catch(e){throw console.error(`Error fetching customer balance history:`,e),e}}async getCustomerChildren(e){try{let n=await t(`${this.baseUrl}/${e}/children`,{loadingMessage:`Loading customer children...`});return n.data.data}catch(e){throw console.error(`Error fetching customer children:`,e),e}}async checkCreditLimit(e){try{let n=await t(`${this.baseUrl}/${e}/credit-status`,{showLoading:!1});return n.data.data}catch(e){throw console.error(`Error checking credit limit:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=a(`customers`,()=>{let e=s([]),t=s(null),n=s([]),r=s(null),i=s([]),a=s(c()),l=s(!1),d=s({}),f=o(()=>e.value.filter(e=>e.is_active)),p=o(()=>e.value.filter(e=>!e.is_active)),m=o(()=>f.value.map(e=>({value:e.id,label:e.name,disabled:!1,code:e.code,balance:e.current_balance}))),h=o(()=>t=>e.value.filter(e=>e.customer_type_id===t)),g=o(()=>t=>e.value.filter(e=>e.customer_zone_id===t)),_=o(()=>t=>e.value.filter(e=>e.salesperson_id===t)),v=o(()=>e.value.filter(e=>e.is_over_credit_limit)),y=o(()=>e.value.filter(e=>e.current_balance!==0)),b=o(()=>d.value),x=async t=>{try{l.value=!0,t&&(d.value={...d.value,...t});let n=await u.getCustomers(d.value);e.value=n.data,a.value=n.pagination}catch(e){throw console.error(`Error fetching customers:`,e),e}finally{l.value=!1}},S=async e=>{try{let n=await u.getCustomer(e);return t.value=n,n}catch(e){throw console.error(`Error fetching customer:`,e),e}},C=async t=>{try{let n=await u.createCustomer(t);return e.value.unshift(n),a.value.total+=1,n}catch(e){throw console.error(`Error creating customer:`,e),e}},w=async t=>{try{console.log(`reach stored`);let n=await u.createCustomerWithFiles(t);return e.value.unshift(n),a.value.total+=1,n}catch(e){throw console.error(`Error creating customer with files:`,e),e}},T=async(n,r)=>{try{let i=await u.updateCustomer(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating customer:`,e),e}},E=async(n,r)=>{try{let i=await u.updateCustomerWithFiles(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating customer with files:`,e),e}},D=async n=>{try{await u.deleteCustomer(n);let r=e.value.findIndex(e=>e.id===n);r!==-1&&e.value.splice(r,1),--a.value.total,t.value?.id===n&&(t.value=null)}catch(e){throw console.error(`Error deleting customer:`,e),e}},O=async e=>{try{l.value=!0;let t=e||{},r=await u.getTrashedCustomers(t);n.value=r.data}catch(e){throw console.error(`Error fetching trashed customers:`,e),e}finally{l.value=!1}},k=async t=>{try{let r=await u.restoreCustomer(t),i=n.value.findIndex(e=>e.id===t);return i!==-1&&n.value.splice(i,1),e.value.unshift(r),a.value.total+=1,r}catch(e){throw console.error(`Error restoring customer:`,e),e}},A=async e=>{try{await u.forceDeleteCustomer(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting customer:`,e),e}},j=async()=>{try{let e=await u.getCustomerStats();return r.value=e,e}catch(e){throw console.error(`Error fetching customer statistics:`,e),e}},M=async()=>{try{let e=await u.getSalespersons();return i.value=e,e}catch(e){throw console.error(`Error fetching salespersons:`,e),e}},N=async()=>{try{return await u.getNextCustomerCode()}catch(e){throw console.error(`Error getting next customer code:`,e),e}},P=async e=>{try{return await u.exportCustomers(e)}catch(e){throw console.error(`Error exporting customers:`,e),e}},F=async e=>{try{return await u.searchCustomers(e)}catch(e){throw console.error(`Error searching customers:`,e),e}},I=async(n,r)=>{try{let i=await u.updateCustomerBalance(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating customer balance:`,e),e}},L=async e=>{try{return await u.getCustomerBalanceHistory(e)}catch(e){throw console.error(`Error fetching customer balance history:`,e),e}},R=async e=>{try{return await u.checkCreditLimit(e)}catch(e){throw console.error(`Error checking customer credit limit:`,e),e}},z=async e=>{try{return await u.getCustomerChildren(e)}catch(e){throw console.error(`Error fetching customer children:`,e),e}},B=async()=>{try{return await u.getCustomersForSelect()}catch(e){return console.error(`Error fetching customers for select:`,e),[]}},V=e=>{d.value={...d.value,...e}},H=()=>{d.value={}},U=()=>{t.value=null},W=e=>{d.value={...d.value,search:e},X()},G=(e,t)=>{d.value={...d.value,sort_by:e,sort_direction:t},X()},K=e=>{d.value={...d.value,page:e},X()},q=e=>{d.value={...d.value,per_page:e,page:1},X()},J=e=>{d.value={...d.value,...e},X()},Y=()=>{},X=async e=>{await x(e)},Z=()=>{e.value=[],t.value=null,n.value=[],r.value=null,i.value=[],a.value=c(),d.value={},l.value=!1};return{customers:e,currentCustomer:t,trashedCustomers:n,customerStats:r,salespersons:i,pagination:a,loading:l,filters:d,activeCustomers:f,inactiveCustomers:p,customersForSelect:m,customersByType:h,customersByZone:g,customersBySalesperson:_,customersOverCreditLimit:v,customersWithBalance:y,urlParams:b,fetchCustomers:x,fetchCustomer:S,createCustomer:C,createCustomerWithFiles:w,updateCustomer:T,updateCustomerWithFiles:E,deleteCustomer:D,fetchTrashedCustomers:O,restoreCustomer:k,forceDeleteCustomer:A,fetchCustomerStats:j,fetchSalespersons:M,getNextCustomerCode:N,exportCustomers:P,searchCustomers:F,updateCustomerBalance:I,getCustomerBalanceHistory:L,checkCustomerCreditLimit:R,getCustomerChildren:z,fetchCustomersForSelect:B,updateFilters:V,clearFilters:H,clearCurrentCustomer:U,setSearch:W,setSort:G,setPage:K,setPerPage:q,updateUrlParams:J,syncFiltersWithUrl:Y,fetchData:X,reset:Z}});export{d as b};