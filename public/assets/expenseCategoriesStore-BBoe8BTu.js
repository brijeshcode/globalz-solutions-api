import{aB as e,aX as t,ae as n,af as r,ag as i,ah as a,ai as o,ap as s}from"./index-BwKalbrN.js";import{b as c}from"./tableUtils-jdfVzp2e.js";var l=class{baseUrl=`/setups/expenses/categories`;async getExpenseCategories(e){try{let t=this.buildQueryParams(e),n=await r(`${this.baseUrl}?${t}`,{loadingMessage:`Loading expense categories...`,showLoading:!0});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching expense categories:`,e),e}}async getExpenseCategory(e){try{let t=await r(`${this.baseUrl}/${e}`,{loadingMessage:`Loading expense category...`});return t.data.data}catch(e){throw console.error(`Error fetching expense category:`,e),e}}async createExpenseCategory(e){try{let t=await a(this.baseUrl,e,{loadingMessage:`Creating expense category...`,showSuccessNotification:!0,successMessage:`Expense category created successfully`});return t.data.data}catch(e){throw console.error(`Error creating expense category:`,e),e}}async updateExpenseCategory(e,t){try{let n=await o(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating expense category...`,showSuccessNotification:!0,successMessage:`Expense category updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating expense category:`,e),e}}async deleteExpenseCategory(e){try{await n(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting expense category...`,showSuccessNotification:!0,successMessage:`Expense category deleted successfully`})}catch(e){throw console.error(`Error deleting expense category:`,e),e}}async getTrashedExpenseCategories(e){try{let t=this.buildQueryParams(e),n=await r(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed expense categories...`});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching trashed expense categories:`,e),e}}async restoreExpenseCategory(e){try{let t=await i(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring expense category...`,showSuccessNotification:!0,successMessage:`Expense category restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring expense category:`,e),e}}async forceDeleteExpenseCategory(e){try{await n(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting expense category...`,showSuccessNotification:!0,successMessage:`Expense category permanently deleted`})}catch(e){throw console.error(`Error permanently deleting expense category:`,e),e}}async getExpenseCategoriesForSelect(){try{let e=await r(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1,parent_id:e.parent_id,level:0}))}catch(e){throw console.error(`Error fetching expense categories for select:`,e),e}}async getExpenseCategoryHierarchy(){try{let e=await r(`${this.baseUrl}/hierarchy`,{loadingMessage:`Loading expense category hierarchy...`});return e.data.data}catch(e){throw console.error(`Error fetching expense category hierarchy:`,e),e}}async getRootExpenseCategories(){try{let e=await r(`${this.baseUrl}/roots`,{loadingMessage:`Loading root expense categories...`});return e.data.data}catch(e){throw console.error(`Error fetching root expense categories:`,e),e}}async getExpenseCategoryChildren(e){try{let t=await r(`${this.baseUrl}/${e}/children`,{loadingMessage:`Loading expense category children...`});return t.data.data}catch(e){throw console.error(`Error fetching expense category children:`,e),e}}async getExpenseCategoryStats(){try{let e=await r(`${this.baseUrl}/stats`,{loadingMessage:`Loading expense category statistics...`});return e.data.data}catch(e){throw console.error(`Error fetching expense category statistics:`,e),e}}async exportExpenseCategories(e){try{let t=this.buildQueryParams(e),n=await r(`${this.baseUrl}/export?${t}`,{loadingMessage:`Exporting expense categories...`,responseType:`blob`});return n.data.data}catch(e){throw console.error(`Error exporting expense categories:`,e),e}}async searchExpenseCategories(e){try{let t=await r(`${this.baseUrl}/search?q=${encodeURIComponent(e)}`,{showLoading:!1});return t.data.data}catch(e){throw console.error(`Error searching expense categories:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=s(`expenseCategories`,()=>{let n=t([]),r=t(null),i=t([]),a=t([]),o=t([]),s=t(null),l=t(c()),d=t(!1),f=t({}),p=e(()=>n.value.filter(e=>e.is_active)),m=e(()=>n.value.filter(e=>!e.is_active)),h=e(()=>n.value.filter(e=>e.is_root)),g=e(()=>n.value.filter(e=>e.has_children)),_=e(()=>p.value.map(e=>({value:e.id,label:e.name,disabled:!1,parent_id:e.parent_id,level:0}))),v=e(()=>e=>e===null?n.value.filter(e=>e.parent_id===null):n.value.filter(t=>t.parent_id===e)),y=async e=>{try{d.value=!0,e&&(f.value={...f.value,...e});let t=await u.getExpenseCategories(f.value);n.value=t.data,l.value=t.pagination}catch(e){throw console.error(`Error fetching expense categories:`,e),e}finally{d.value=!1}},b=async e=>{try{let t=await u.getExpenseCategory(e);return r.value=t,t}catch(e){throw console.error(`Error fetching expense category:`,e),e}},x=async e=>{try{let t=await u.createExpenseCategory(e);return n.value.unshift(t),l.value.total+=1,t.is_root&&o.value.unshift(t),t}catch(e){throw console.error(`Error creating expense category:`,e),e}},S=async(e,t)=>{try{let i=await u.updateExpenseCategory(e,t),a=n.value.findIndex(t=>t.id===e);a!==-1&&(n.value[a]=i);let s=o.value.findIndex(t=>t.id===e);return s===-1?i.is_root&&o.value.unshift(i):i.is_root?o.value[s]=i:o.value.splice(s,1),r.value?.id===e&&(r.value=i),i}catch(e){throw console.error(`Error updating expense category:`,e),e}},C=async e=>{try{await u.deleteExpenseCategory(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1);let i=o.value.findIndex(t=>t.id===e);i!==-1&&o.value.splice(i,1),--l.value.total,r.value?.id===e&&(r.value=null)}catch(e){throw console.error(`Error deleting expense category:`,e),e}},w=async e=>{try{d.value=!0;let t=e||{},n=await u.getTrashedExpenseCategories(t);i.value=n.data}catch(e){throw console.error(`Error fetching trashed expense categories:`,e),e}finally{d.value=!1}},T=async e=>{try{let t=await u.restoreExpenseCategory(e),r=i.value.findIndex(t=>t.id===e);return r!==-1&&i.value.splice(r,1),n.value.unshift(t),l.value.total+=1,t.is_root&&o.value.unshift(t),t}catch(e){throw console.error(`Error restoring expense category:`,e),e}},E=async e=>{try{await u.forceDeleteExpenseCategory(e);let t=i.value.findIndex(t=>t.id===e);t!==-1&&i.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting expense category:`,e),e}},D=async()=>{try{d.value=!0;let e=await u.getExpenseCategoryHierarchy();return a.value=e,e}catch(e){throw console.error(`Error fetching expense category hierarchy:`,e),e}finally{d.value=!1}},O=async()=>{try{let e=await u.getRootExpenseCategories();return o.value=e,e}catch(e){throw console.error(`Error fetching root expense categories:`,e),e}},k=async e=>{try{return await u.getExpenseCategoryChildren(e)}catch(e){throw console.error(`Error fetching expense category children:`,e),e}},A=async()=>{try{let e=await u.getExpenseCategoryStats();return s.value=e,e}catch(e){throw console.error(`Error fetching expense category statistics:`,e),e}},j=async e=>{try{return await u.exportExpenseCategories(e)}catch(e){throw console.error(`Error exporting expense categories:`,e),e}},M=async e=>{try{return await u.searchExpenseCategories(e)}catch(e){throw console.error(`Error searching expense categories:`,e),e}},N=e=>{f.value={...f.value,...e}},P=()=>{f.value={}},F=()=>{r.value=null},I=()=>{n.value=[],r.value=null,i.value=[],a.value=[],o.value=[],s.value=null,l.value=c(),f.value={},d.value=!1},L=async()=>{try{return await u.getExpenseCategoriesForSelect()}catch(e){return console.error(`Error fetching expense categories for select:`,e),[]}},R=(e,t=null)=>e.filter(e=>e.parent_id===t).map(t=>({...t,children:R(e,t.id)})),z=e(()=>R(n.value));return{expenseCategories:n,currentExpenseCategory:r,trashedExpenseCategories:i,hierarchyExpenseCategories:a,rootExpenseCategories:o,expenseCategoryStats:s,pagination:l,loading:d,filters:f,activeExpenseCategories:p,inactiveExpenseCategories:m,rootCategoriesOnly:h,categoriesWithChildren:g,expenseCategoriesForSelect:_,expenseCategoriesByParent:v,expenseCategoryTree:z,fetchExpenseCategories:y,fetchExpenseCategory:b,createExpenseCategory:x,updateExpenseCategory:S,deleteExpenseCategory:C,fetchTrashedExpenseCategories:w,restoreExpenseCategory:T,forceDeleteExpenseCategory:E,fetchExpenseCategoryHierarchy:D,fetchRootExpenseCategories:O,fetchExpenseCategoryChildren:k,fetchExpenseCategoryStats:A,exportExpenseCategories:j,searchExpenseCategories:M,updateFilters:N,clearFilters:P,clearCurrentExpenseCategory:F,reset:I,fetchExpenseCategoriesForSelect:L,buildTree:R}});export{d as b};