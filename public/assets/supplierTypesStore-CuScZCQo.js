import{P as e,Q as t,R as n,S as r,T as i,_ as a,a9 as o,av as s}from"./index-sY1m64Sn.js";var c=class{baseUrl=`/setups/supplier-types`;async getSupplierTypes(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}?${n}`,{loadingMessage:`Loading supplier types...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching supplier types:`,e),e}}async getSupplierType(e){try{let n=await t(`${this.baseUrl}/${e}`,{loadingMessage:`Loading supplier type...`});return n.data.data}catch(e){throw console.error(`Error fetching supplier type:`,e),e}}async createSupplierType(e){try{let t=await r(this.baseUrl,e,{loadingMessage:`Creating supplier type...`,showSuccessNotification:!0,successMessage:`Supplier type created successfully`});return t.data.data}catch(e){throw console.error(`Error creating supplier type:`,e),e}}async updateSupplierType(e,t){try{let n=await i(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating supplier type...`,showSuccessNotification:!0,successMessage:`Supplier type updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating supplier type:`,e),e}}async deleteSupplierType(t){try{await e(`${this.baseUrl}/${t}`,{loadingMessage:`Deleting supplier type...`,showSuccessNotification:!0,successMessage:`Supplier type deleted successfully`})}catch(e){throw console.error(`Error deleting supplier type:`,e),e}}async getTrashedSupplierTypes(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}/trashed?${n}`,{loadingMessage:`Loading trashed supplier types...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed supplier types:`,e),e}}async restoreSupplierType(e){try{let t=await n(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring supplier type...`,showSuccessNotification:!0,successMessage:`Supplier type restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring supplier type:`,e),e}}async forceDeleteSupplierType(t){try{await e(`${this.baseUrl}/${t}/force-delete`,{loadingMessage:`Permanently deleting supplier type...`,showSuccessNotification:!0,successMessage:`Supplier type permanently deleted`})}catch(e){throw console.error(`Error permanently deleting supplier type:`,e),e}}async getSupplierTypesForSelect(){try{let e=await t(`${this.baseUrl}`,{showLoading:!1}),n=e.data.data;return n.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1}))}catch(e){throw console.error(`Error fetching supplier types for select:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const l=new c,u=a(`supplierTypes`,()=>{let e=s([]),t=s(null),n=s([]),r=s({current_page:1,per_page:20,total:0,last_page:1,from:null,to:null,has_more_pages:!1,next_page_url:null,prev_page_url:null,first_page_url:``,last_page_url:``}),i=s(!1),a=s({}),c=o(()=>e.value.filter(e=>e.is_active)),u=o(()=>e.value.filter(e=>!e.is_active)),d=o(()=>c.value.map(e=>({value:e.id,label:e.name,disabled:!1}))),f=async t=>{try{i.value=!0,t&&(a.value={...a.value,...t});let n=await l.getSupplierTypes(a.value);e.value=n.data,r.value=n.pagination}catch(e){throw console.error(`Error fetching supplier types:`,e),e}finally{i.value=!1}},p=async e=>{try{let n=await l.getSupplierType(e);return t.value=n,n}catch(e){throw console.error(`Error fetching supplier type:`,e),e}},m=async t=>{try{let n=await l.createSupplierType(t);return e.value.unshift(n),r.value.total+=1,n}catch(e){throw console.error(`Error creating supplier type:`,e),e}},h=async(n,r)=>{try{let i=await l.updateSupplierType(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating supplier type:`,e),e}},g=async n=>{try{await l.deleteSupplierType(n);let i=e.value.findIndex(e=>e.id===n);i!==-1&&e.value.splice(i,1),--r.value.total,t.value?.id===n&&(t.value=null)}catch(e){throw console.error(`Error deleting supplier type:`,e),e}},_=async e=>{try{i.value=!0;let t=e||{},r=await l.getTrashedSupplierTypes(t);n.value=r.data}catch(e){throw console.error(`Error fetching trashed supplier types:`,e),e}finally{i.value=!1}},v=async t=>{try{let i=await l.restoreSupplierType(t),a=n.value.findIndex(e=>e.id===t);return a!==-1&&n.value.splice(a,1),e.value.unshift(i),r.value.total+=1,i}catch(e){throw console.error(`Error restoring supplier type:`,e),e}},y=async e=>{try{await l.forceDeleteSupplierType(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting supplier type:`,e),e}},b=e=>{a.value={...a.value,...e}},x=()=>{a.value={}},S=()=>{t.value=null},C=()=>{e.value=[],t.value=null,n.value=[],r.value={current_page:1,per_page:20,total:0,last_page:1,from:null,to:null,has_more_pages:!1,next_page_url:null,prev_page_url:null,first_page_url:``,last_page_url:``},a.value={},i.value=!1},w=async()=>{try{return await l.getSupplierTypesForSelect()}catch(e){return console.error(`Error fetching supplier types for select:`,e),[]}};return{supplierTypes:e,currentSupplierType:t,trashedSupplierTypes:n,pagination:r,loading:i,filters:a,activeSupplierTypes:c,inactiveSupplierTypes:u,supplierTypesForSelect:d,fetchSupplierTypes:f,fetchSupplierType:p,createSupplierType:m,updateSupplierType:h,deleteSupplierType:g,fetchTrashedSupplierTypes:_,restoreSupplierType:v,forceDeleteSupplierType:y,updateFilters:b,clearFilters:x,clearCurrentSupplierType:S,reset:C,fetchSupplierTypesForSelect:w}});export{u as b};