import{aU as e,ab as t,ac as n,ad as r,ae as i,af as a,am as o,ay as s}from"./index-CFgtk2M4.js";import{b as c}from"./tableUtils-jdfVzp2e.js";var l=class{baseUrl=`/setups/customers/payment-terms`;async getCustomerPaymentTerms(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}?${t}`,{loadingMessage:`Loading customer payment terms...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching customer payment terms:`,e),e}}async getCustomerPaymentTerm(e){try{let t=await n(`${this.baseUrl}/${e}`,{loadingMessage:`Loading customer Payment Term...`});return t.data.data}catch(e){throw console.error(`Error fetching customer Payment Term:`,e),e}}async createCustomerPaymentTerm(e){try{let t=await i(this.baseUrl,e,{loadingMessage:`Creating customer payment term...`,showSuccessNotification:!0,successMessage:`Customer payment term created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer payment term:`,e),e}}async updateCustomerPaymentTerm(e,t){try{let n=await a(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer payment term...`,showSuccessNotification:!0,successMessage:`CustomerPaymentTerm updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer payment term:`,e),e}}async deleteCustomerPaymentTerm(e){try{await t(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting customer payment term...`,showSuccessNotification:!0,successMessage:`Customer Payment Term deleted successfully`})}catch(e){throw console.error(`Error deleting customer payment term:`,e),e}}async getTrashedCustomerPaymentTerms(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed customer payment term...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed customer payment term:`,e),e}}async restoreCustomerPaymentTerm(e){try{let t=await r(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring customer payment term...`,showSuccessNotification:!0,successMessage:`CustomerPaymentTerm restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring customer payment term:`,e),e}}async forceDeleteCustomerPaymentTerm(e){try{await t(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting customer payment term...`,showSuccessNotification:!0,successMessage:`CustomerPaymentTerm permanently deleted`})}catch(e){throw console.error(`Error permanently deleting customer payment term:`,e),e}}async getCustomerPaymentTermsForSelect(){try{let e=await n(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1}))}catch(e){throw console.error(`Error fetching customer payment term for select:`,e),e}}async getCustomerPaymentTermHierarchy(){try{let e=await n(`${this.baseUrl}/hierarchy`,{loadingMessage:`Loading customer payment term hierarchy...`});return e.data.data}catch(e){throw console.error(`Error fetching customer payment term hierarchy:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=o(`customerPaymentTerms`,()=>{let t=e([]),n=e([]),r=e(null),i=e([]),a=e(c()),o=e(!1),l=e({}),d=s(()=>t.value.filter(e=>e.is_active)),f=s(()=>t.value.filter(e=>!e.is_active)),p=s(()=>d.value.map(e=>({value:e.id,label:e.name,disabled:!1}))),m=async e=>{try{o.value=!0,e&&(l.value={...l.value,...e});let n=await u.getCustomerPaymentTerms(l.value);t.value=n.data,a.value=n.pagination}catch(e){throw console.error(`Error fetching customer payment terms:`,e),e}finally{o.value=!1}},h=async e=>{try{let t=await u.getCustomerPaymentTerm(e);return r.value=t,t}catch(e){throw console.error(`Error fetching customer payment term:`,e),e}},g=async e=>{try{let n=await u.createCustomerPaymentTerm(e);return t.value.unshift(n),a.value.total+=1,n}catch(e){throw console.error(`Error creating customer payment term:`,e),e}},_=async(e,n)=>{try{let i=await u.updateCustomerPaymentTerm(e,n),a=t.value.findIndex(t=>t.id===e);return a!==-1&&(t.value[a]=i),r.value?.id===e&&(r.value=i),i}catch(e){throw console.error(`Error updating customer payment term:`,e),e}},v=async e=>{try{await u.deleteCustomerPaymentTerm(e);let n=t.value.findIndex(t=>t.id===e);n!==-1&&t.value.splice(n,1),--a.value.total,r.value?.id===e&&(r.value=null)}catch(e){throw console.error(`Error deleting customer payment term:`,e),e}},y=async e=>{try{o.value=!0;let t=e||{},n=await u.getTrashedCustomerPaymentTerms(t);i.value=n.data}catch(e){throw console.error(`Error fetching trashed customer payment terms:`,e),e}finally{o.value=!1}},b=async e=>{try{let n=await u.restoreCustomerPaymentTerm(e),r=i.value.findIndex(t=>t.id===e);return r!==-1&&i.value.splice(r,1),t.value.unshift(n),a.value.total+=1,n}catch(e){throw console.error(`Error restoring customer payment term:`,e),e}},x=async e=>{try{await u.forceDeleteCustomerPaymentTerm(e);let t=i.value.findIndex(t=>t.id===e);t!==-1&&i.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting customer payment term:`,e),e}},S=e=>{l.value={...l.value,...e}},C=()=>{l.value={}},w=()=>{r.value=null},T=()=>{t.value=[],n.value=[],r.value=null,i.value=[],a.value=c(),l.value={},o.value=!1},E=async()=>{try{await u.getCustomerPaymentTermsForSelect();let e=await u.getCustomerPaymentTerms({per_page:1e3,is_active:!0});return n.value=e.data,n.value}catch(e){return console.error(`Error fetching customer payment terms for select:`,e),[]}};return{customerPaymentTerms:t,customerPaymentTermsSelect:n,currentCustomerPaymentTerm:r,trashedCustomerPaymentTerms:i,pagination:a,loading:o,filters:l,activeCustomerPaymentTerms:d,inactiveCustomerPaymentTerms:f,customerPaymentTermsForSelect:p,fetchCustomerPaymentTerms:m,fetchCustomerPaymentTerm:h,createCustomerPaymentTerm:g,updateCustomerPaymentTerm:_,deleteCustomerPaymentTerm:v,fetchTrashedCustomerPaymentTerms:y,restoreCustomerPaymentTerm:b,forceDeleteCustomerPaymentTerm:x,updateFilters:S,clearFilters:C,clearCurrentCustomerPaymentTerm:w,reset:T,fetchCustomerPaymentTermsForSelect:E}});export{d as b};