import{a7 as e,a8 as t,a9 as n,aP as r,aa as i,ab as a,ai as o,at as s}from"./index-Bzj3ogY6.js";import{b as c}from"./tableUtils-jdfVzp2e.js";var l=class{baseUrl=`/setups/employees/departments`;async getDepartments(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}?${n}`,{loadingMessage:`Loading departments...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching departments:`,e),e}}async getDepartment(e){try{let n=await t(`${this.baseUrl}/${e}`,{loadingMessage:`Loading department...`});return n.data.data}catch(e){throw console.error(`Error fetching department:`,e),e}}async createDepartment(e){try{let t=await i(this.baseUrl,e,{loadingMessage:`Creating department...`,showSuccessNotification:!0,successMessage:`Department created successfully`});return t.data.data}catch(e){throw console.error(`Error creating department:`,e),e}}async updateDepartment(e,t){try{let n=await a(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating department...`,showSuccessNotification:!0,successMessage:`Department updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating department:`,e),e}}async deleteDepartment(t){try{await e(`${this.baseUrl}/${t}`,{loadingMessage:`Deleting department...`,showSuccessNotification:!0,successMessage:`Department deleted successfully`})}catch(e){throw console.error(`Error deleting department:`,e),e}}async getTrashedDepartments(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}/trashed?${n}`,{loadingMessage:`Loading trashed departments...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed departments:`,e),e}}async restoreDepartment(e){try{let t=await n(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring department...`,showSuccessNotification:!0,successMessage:`Department restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring department:`,e),e}}async forceDeleteDepartment(t){try{await e(`${this.baseUrl}/${t}/force-delete`,{loadingMessage:`Permanently deleting department...`,showSuccessNotification:!0,successMessage:`Department permanently deleted`})}catch(e){throw console.error(`Error permanently deleting department:`,e),e}}async getDepartmentsForSelect(){try{let e=await t(`${this.baseUrl}`,{showLoading:!1}),n=e.data.data;return n.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1}))}catch(e){throw console.error(`Error fetching departments for select:`,e),e}}async getDepartmentHierarchy(){try{let e=await t(`${this.baseUrl}/hierarchy`,{loadingMessage:`Loading department hierarchy...`});return e.data.data}catch(e){throw console.error(`Error fetching department hierarchy:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=o(`departments`,()=>{let e=r([]),t=r(null),n=r([]),i=r([]),a=r(c()),o=r(!1),l=r({}),d=s(()=>e.value.filter(e=>e.is_active)),f=s(()=>e.value.filter(e=>!e.is_active)),p=s(()=>e.value.filter(e=>!e.parent_id)),m=s(()=>d.value.map(e=>({value:e.id,label:e.name,disabled:!1}))),h=async t=>{try{o.value=!0,t&&(l.value={...l.value,...t});let n=await u.getDepartments(l.value);e.value=n.data,a.value=n.pagination}catch(e){throw console.error(`Error fetching departments:`,e),e}finally{o.value=!1}},g=async e=>{try{let n=await u.getDepartment(e);return t.value=n,n}catch(e){throw console.error(`Error fetching department:`,e),e}},_=async t=>{try{let n=await u.createDepartment(t);return e.value.unshift(n),a.value.total+=1,n}catch(e){throw console.error(`Error creating department:`,e),e}},v=async(n,r)=>{try{let i=await u.updateDepartment(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating department:`,e),e}},y=async n=>{try{await u.deleteDepartment(n);let r=e.value.findIndex(e=>e.id===n);r!==-1&&e.value.splice(r,1),--a.value.total,t.value?.id===n&&(t.value=null)}catch(e){throw console.error(`Error deleting department:`,e),e}},b=async e=>{try{o.value=!0;let t=e||{},r=await u.getTrashedDepartments(t);n.value=r.data}catch(e){throw console.error(`Error fetching trashed departments:`,e),e}finally{o.value=!1}},x=async t=>{try{let r=await u.restoreDepartment(t),i=n.value.findIndex(e=>e.id===t);return i!==-1&&n.value.splice(i,1),e.value.unshift(r),a.value.total+=1,r}catch(e){throw console.error(`Error restoring department:`,e),e}},S=async e=>{try{await u.forceDeleteDepartment(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting department:`,e),e}},C=async()=>{try{o.value=!0;let e=await u.getDepartmentHierarchy();return i.value=e,e}catch(e){throw console.error(`Error fetching department hierarchy:`,e),e}finally{o.value=!1}},w=e=>{l.value={...l.value,...e}},T=()=>{l.value={}},E=()=>{t.value=null},D=()=>{e.value=[],t.value=null,n.value=[],i.value=[],a.value=c(),l.value={},o.value=!1},O=async()=>{try{return await u.getDepartmentsForSelect()}catch(e){return console.error(`Error fetching departments for select:`,e),[]}};return{departments:e,currentDepartment:t,trashedDepartments:n,departmentHierarchy:i,pagination:a,loading:o,filters:l,activeDepartments:d,inactiveDepartments:f,rootDepartments:p,departmentsForSelect:m,fetchDepartments:h,fetchDepartment:g,createDepartment:_,updateDepartment:v,deleteDepartment:y,fetchTrashedDepartments:b,restoreDepartment:x,forceDeleteDepartment:S,fetchDepartmentHierarchy:C,updateFilters:w,clearFilters:T,clearCurrentDepartment:E,reset:D,fetchDepartmentsForSelect:O}});var f=d;export{f as b,d as c};