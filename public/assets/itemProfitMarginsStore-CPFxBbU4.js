import{a7 as e,a8 as t,a9 as n,aP as r,aa as i,ab as a,ai as o,at as s}from"./index-DxFhYz3N.js";import{b as c}from"./tableUtils-jdfVzp2e.js";var l=class{baseUrl=`/setups/items/profit-margins`;async getItemProfitMargins(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}?${n}`,{loadingMessage:`Loading item profit margins...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching item profit margins:`,e),e}}async getItemProfitMargin(e){try{let n=await t(`${this.baseUrl}/${e}`,{loadingMessage:`Loading item profit margin...`});return n.data.data}catch(e){throw console.error(`Error fetching item profit margin:`,e),e}}async createItemProfitMargin(e){try{let t=await i(this.baseUrl,e,{loadingMessage:`Creating item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin created successfully`});return t.data.data}catch(e){throw console.error(`Error creating item profit margin:`,e),e}}async updateItemProfitMargin(e,t){try{let n=await a(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating item profit margin:`,e),e}}async deleteItemProfitMargin(t){try{await e(`${this.baseUrl}/${t}`,{loadingMessage:`Deleting item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin deleted successfully`})}catch(e){throw console.error(`Error deleting item profit margin:`,e),e}}async getTrashedItemProfitMargins(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}/trashed?${n}`,{loadingMessage:`Loading trashed item profit margins...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed item profit margins:`,e),e}}async restoreItemProfitMargin(e){try{let t=await n(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring item profit margin:`,e),e}}async forceDeleteItemProfitMargin(t){try{await e(`${this.baseUrl}/${t}/force-delete`,{loadingMessage:`Permanently deleting item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin permanently deleted`})}catch(e){throw console.error(`Error permanently deleting item profit margin:`,e),e}}async getItemProfitMarginsForSelect(){try{let e=await t(`${this.baseUrl}`,{showLoading:!1}),n=e.data.data;return n.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,marginPercentage:e.margin_percentage,disabled:!1}))}catch(e){throw console.error(`Error fetching item profit margins for select:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=o(`itemProfitMargins`,()=>{let e=r([]),t=r(null),n=r([]),i=r(c()),a=r(!1),o=r({}),l=s(()=>e.value.filter(e=>e.is_active)),d=s(()=>e.value.filter(e=>!e.is_active)),f=s(()=>l.value.map(e=>({value:e.id,label:e.name,marginPercentage:e.margin_percentage,disabled:!1}))),p=async t=>{try{a.value=!0,t&&(o.value={...o.value,...t});let n=await u.getItemProfitMargins(o.value);e.value=n.data,i.value=n.pagination}catch(e){throw console.error(`Error fetching item profit margins:`,e),e}finally{a.value=!1}},m=async e=>{try{let n=await u.getItemProfitMargin(e);return t.value=n,n}catch(e){throw console.error(`Error fetching item profit margin:`,e),e}},h=async t=>{try{let n=await u.createItemProfitMargin(t);return e.value.unshift(n),i.value.total+=1,n}catch(e){throw console.error(`Error creating item profit margin:`,e),e}},g=async(n,r)=>{try{let i=await u.updateItemProfitMargin(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating item profit margin:`,e),e}},_=async n=>{try{await u.deleteItemProfitMargin(n);let r=e.value.findIndex(e=>e.id===n);r!==-1&&e.value.splice(r,1),--i.value.total,t.value?.id===n&&(t.value=null)}catch(e){throw console.error(`Error deleting item profit margin:`,e),e}},v=async e=>{try{a.value=!0;let t=e||{},r=await u.getTrashedItemProfitMargins(t);n.value=r.data}catch(e){throw console.error(`Error fetching trashed item profit margins:`,e),e}finally{a.value=!1}},y=async t=>{try{let r=await u.restoreItemProfitMargin(t),a=n.value.findIndex(e=>e.id===t);return a!==-1&&n.value.splice(a,1),e.value.unshift(r),i.value.total+=1,r}catch(e){throw console.error(`Error restoring item profit margin:`,e),e}},b=async e=>{try{await u.forceDeleteItemProfitMargin(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting item profit margin:`,e),e}},x=e=>{o.value={...o.value,...e}},S=()=>{o.value={}},C=()=>{t.value=null},w=()=>{e.value=[],t.value=null,n.value=[],i.value=c(),o.value={},a.value=!1},T=async()=>{try{return await u.getItemProfitMarginsForSelect()}catch(e){return console.error(`Error fetching item profit margins for select:`,e),[]}};return{itemProfitMargins:e,currentItemProfitMargin:t,trashedItemProfitMargins:n,pagination:i,loading:a,filters:o,activeItemProfitMargins:l,inactiveItemProfitMargins:d,itemProfitMarginsForSelect:f,fetchItemProfitMargins:p,fetchItemProfitMargin:m,createItemProfitMargin:h,updateItemProfitMargin:g,deleteItemProfitMargin:_,fetchTrashedItemProfitMargins:v,restoreItemProfitMargin:y,forceDeleteItemProfitMargin:b,updateFilters:x,clearFilters:S,clearCurrentItemProfitMargin:C,reset:w,fetchItemProfitMarginsForSelect:T}});export{d as b};