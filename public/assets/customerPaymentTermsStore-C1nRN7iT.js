import{aE as e,a_ as t,ah as n,ai as r,aj as i,ak as a,al as o,as as s}from"./index-Cc64H2XG.js";import{b as c}from"./tableUtils-BFc6-TYF.js";var l=class{baseUrl=`/setups/customers/payment-terms`;async getCustomerPaymentTerms(e){try{let t=this.buildQueryParams(e),n=await r(`${this.baseUrl}?${t}`,{loadingMessage:`Loading customer payment terms...`,showLoading:!0});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching customer payment terms:`,e),e}}async getCustomerPaymentTerm(e){try{let t=await r(`${this.baseUrl}/${e}`,{loadingMessage:`Loading customer Payment Term...`});return t.data.data}catch(e){throw console.error(`Error fetching customer Payment Term:`,e),e}}async createCustomerPaymentTerm(e){try{let t=await a(this.baseUrl,e,{loadingMessage:`Creating customer payment term...`,showSuccessNotification:!0,successMessage:`Customer payment term created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer payment term:`,e),e}}async updateCustomerPaymentTerm(e,t){try{let n=await o(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer payment term...`,showSuccessNotification:!0,successMessage:`CustomerPaymentTerm updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer payment term:`,e),e}}async deleteCustomerPaymentTerm(e){try{await n(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting customer payment term...`,showSuccessNotification:!0,successMessage:`Customer Payment Term deleted successfully`})}catch(e){throw console.error(`Error deleting customer payment term:`,e),e}}async getTrashedCustomerPaymentTerms(e){try{let t=this.buildQueryParams(e),n=await r(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed customer payment term...`});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching trashed customer payment term:`,e),e}}async restoreCustomerPaymentTerm(e){try{let t=await i(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring customer payment term...`,showSuccessNotification:!0,successMessage:`CustomerPaymentTerm restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring customer payment term:`,e),e}}async forceDeleteCustomerPaymentTerm(e){try{await n(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting customer payment term...`,showSuccessNotification:!0,successMessage:`CustomerPaymentTerm permanently deleted`})}catch(e){throw console.error(`Error permanently deleting customer payment term:`,e),e}}async getCustomerPaymentTermsForSelect(){try{let e=await r(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1}))}catch(e){throw console.error(`Error fetching customer payment term for select:`,e),e}}async getCustomerPaymentTermHierarchy(){try{let e=await r(`${this.baseUrl}/hierarchy`,{loadingMessage:`Loading customer payment term hierarchy...`});return e.data.data}catch(e){throw console.error(`Error fetching customer payment term hierarchy:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=s(`customerPaymentTerms`,()=>{let n=t([]),r=t([]),i=t(null),a=t([]),o=t(c()),s=t(!1),l=t({}),d=e(()=>n.value.filter(e=>e.is_active)),f=e(()=>n.value.filter(e=>!e.is_active)),p=e(()=>d.value.map(e=>({value:e.id,label:e.name,disabled:!1}))),m=async e=>{try{s.value=!0,e&&(l.value={...l.value,...e});let t=await u.getCustomerPaymentTerms(l.value);n.value=t.data,o.value=t.pagination}catch(e){throw console.error(`Error fetching customer payment terms:`,e),e}finally{s.value=!1}},h=async e=>{try{let t=await u.getCustomerPaymentTerm(e);return i.value=t,t}catch(e){throw console.error(`Error fetching customer payment term:`,e),e}},g=async e=>{try{let t=await u.createCustomerPaymentTerm(e);return n.value.unshift(t),o.value.total+=1,t}catch(e){throw console.error(`Error creating customer payment term:`,e),e}},_=async(e,t)=>{try{let r=await u.updateCustomerPaymentTerm(e,t),a=n.value.findIndex(t=>t.id===e);return a!==-1&&(n.value[a]=r),i.value?.id===e&&(i.value=r),r}catch(e){throw console.error(`Error updating customer payment term:`,e),e}},v=async e=>{try{await u.deleteCustomerPaymentTerm(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1),--o.value.total,i.value?.id===e&&(i.value=null)}catch(e){throw console.error(`Error deleting customer payment term:`,e),e}},y=async e=>{try{s.value=!0;let t=e||{},n=await u.getTrashedCustomerPaymentTerms(t);a.value=n.data}catch(e){throw console.error(`Error fetching trashed customer payment terms:`,e),e}finally{s.value=!1}},b=async e=>{try{let t=await u.restoreCustomerPaymentTerm(e),r=a.value.findIndex(t=>t.id===e);return r!==-1&&a.value.splice(r,1),n.value.unshift(t),o.value.total+=1,t}catch(e){throw console.error(`Error restoring customer payment term:`,e),e}},x=async e=>{try{await u.forceDeleteCustomerPaymentTerm(e);let t=a.value.findIndex(t=>t.id===e);t!==-1&&a.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting customer payment term:`,e),e}},S=e=>{l.value={...l.value,...e}},C=()=>{l.value={}},w=()=>{i.value=null},T=()=>{n.value=[],r.value=[],i.value=null,a.value=[],o.value=c(),l.value={},s.value=!1},E=async()=>{try{await u.getCustomerPaymentTermsForSelect();let e=await u.getCustomerPaymentTerms({per_page:1e3,is_active:!0});return r.value=e.data,r.value}catch(e){return console.error(`Error fetching customer payment terms for select:`,e),[]}};return{customerPaymentTerms:n,customerPaymentTermsSelect:r,currentCustomerPaymentTerm:i,trashedCustomerPaymentTerms:a,pagination:o,loading:s,filters:l,activeCustomerPaymentTerms:d,inactiveCustomerPaymentTerms:f,customerPaymentTermsForSelect:p,fetchCustomerPaymentTerms:m,fetchCustomerPaymentTerm:h,createCustomerPaymentTerm:g,updateCustomerPaymentTerm:_,deleteCustomerPaymentTerm:v,fetchTrashedCustomerPaymentTerms:y,restoreCustomerPaymentTerm:b,forceDeleteCustomerPaymentTerm:x,updateFilters:S,clearFilters:C,clearCurrentCustomerPaymentTerm:w,reset:T,fetchCustomerPaymentTermsForSelect:E}});export{d as b};