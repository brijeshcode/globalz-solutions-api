import{a6 as e,a7 as t,a8 as n,a9 as r,aK as i,aO as a,aa as o,af as s,ag as c,ah as l,as as u}from"./index-stkS_7oq.js";import{b as d}from"./tableUtils-BvWofAYZ.js";var f=class{baseUrl=`/customers/payments`;async getCustomerPayments(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}?${n}`,{loadingMessage:`Loading customer payments...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching customer payments:`,e),e}}async getCustomerPayment(e){try{let n=await t(`${this.baseUrl}/${e}`,{loadingMessage:`Loading customer payment...`});return n.data.data}catch(e){throw console.error(`Error fetching customer payment:`,e),e}}async createCustomerPayment(e){try{let t=await r(this.baseUrl,e,{loadingMessage:`Creating customer payment...`,showSuccessNotification:!0,successMessage:`Customer payment created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer payment:`,e),e}}async updateCustomerPayment(e,t){try{let n=await o(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer payment...`,showSuccessNotification:!0,successMessage:`Customer payment updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer payment:`,e),e}}async deleteCustomerPayment(t){try{await e(`${this.baseUrl}/${t}`,{loadingMessage:`Deleting customer payment...`,showSuccessNotification:!0,successMessage:`Customer payment deleted successfully`})}catch(e){throw console.error(`Error deleting customer payment:`,e),e}}async getTrashedPayments(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}/trashed?${n}`,{loadingMessage:`Loading trashed payments...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed payments:`,e),e}}async unapprovePayment(e){try{let t=await n(`${this.baseUrl}/${e}/unapprove`,{},{loadingMessage:`Removing approval...`,showSuccessNotification:!0,successMessage:`Payment approval removed successfully`});return t.data.data}catch(e){throw console.error(`Error removing payment approval:`,e),e}}async restorePayment(e){try{let t=await n(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring payment...`,showSuccessNotification:!0,successMessage:`Payment restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring payment:`,e),e}}async forceDeletePayment(t){try{await e(`${this.baseUrl}/${t}/force-delete`,{loadingMessage:`Permanently deleting payment...`,showSuccessNotification:!0,successMessage:`Payment permanently deleted`})}catch(e){throw console.error(`Error permanently deleting payment:`,e),e}}async getPaymentStats(){try{let e=await t(`${this.baseUrl}/stats`,{loadingMessage:`Loading payment statistics...`});return e.data.data}catch(e){throw console.error(`Error fetching payment statistics:`,e),e}}async getPaymentsForSelect(){try{let e=await t(`${this.baseUrl}`,{showLoading:!1}),n=e.data.data;return n.map(e=>({value:e.id,label:`${e.code} - ${e.amount}`,disabled:!1}))}catch(e){throw console.error(`Error fetching payments for select:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const p=new f,m=l(`customerPayments`,()=>{let e=c(),t=s(),n=a([]),r=a(null),o=a([]),l=a([]),f=a([]),m=a(null),h=a(d()),g=a(!1),_=a({per_page:50}),v=u(()=>e=>n.value.filter(t=>t.prefix===e)),y=u(()=>e=>n.value.filter(t=>t.customer_id===e)),b=u(()=>e=>n.value.filter(t=>t.currency_id===e)),x=u(()=>n.value.filter(e=>e.approved_at!==null)),S=u(()=>n.value.filter(e=>e.approved_at===null)),C=u(()=>e=>n.value.filter(t=>t.approved_by===e)),ee=u(()=>e=>n.value.filter(t=>t.account_id===e)),te=u(()=>x.value.map(e=>({value:e.id,label:`${e.code} - ${e.amount}`,disabled:!1}))),w=u(()=>n.value.reduce((e,t)=>e+t.amount,0)),T=u(()=>n.value.reduce((e,t)=>e+t.amount_usd,0)),E=u(()=>x.value.reduce((e,t)=>e+t.amount,0)),D=u(()=>S.value.reduce((e,t)=>e+t.amount,0)),O=u(()=>(e,t)=>n.value.filter(n=>{let r=new Date(n.date),i=new Date(e),a=new Date(t);return r>=i&&r<=a})),k=u(()=>(e,t)=>n.value.filter(n=>{if(!n.approved_at)return!1;let r=new Date(n.approved_at),i=new Date(e),a=new Date(t);return r>=i&&r<=a})),A=u(()=>{let e={};return Object.entries(t.query).forEach(([t,n])=>{n&&typeof n==`string`&&(e[t]=n)}),e}),j=async e=>{try{g.value=!0,e&&(_.value={..._.value,...e});let t=await p.getCustomerPayments(_.value);n.value=t.data,h.value=t.pagination}catch(e){throw console.error(`Error fetching payments:`,e),e}finally{g.value=!1}},M=async e=>{try{let t=await p.getCustomerPayment(e);return r.value=t,t}catch(e){throw console.error(`Error fetching payment:`,e),e}},N=async e=>{try{let t=await p.createCustomerPayment(e);return n.value.unshift(t),h.value.total+=1,t.approved_at?l.value.unshift(t):o.value.unshift(t),t}catch(e){throw console.error(`Error creating payment:`,e),e}},P=async(e,t)=>{try{let i=await p.updateCustomerPayment(e,t),a=n.value.findIndex(t=>t.id===e);a!==-1&&(n.value[a]=i);let s=o.value.findIndex(t=>t.id===e),c=l.value.findIndex(t=>t.id===e);return i.approved_at?s===-1?c!==-1&&(l.value[c]=i):(o.value.splice(s,1),l.value.unshift(i)):c===-1?s!==-1&&(o.value[s]=i):(l.value.splice(c,1),o.value.unshift(i)),r.value?.id===e&&(r.value=i),i}catch(e){throw console.error(`Error updating payment:`,e),e}},F=async e=>{try{await p.deleteCustomerPayment(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1);let i=o.value.findIndex(t=>t.id===e);i!==-1&&o.value.splice(i,1);let a=l.value.findIndex(t=>t.id===e);a!==-1&&l.value.splice(a,1),--h.value.total,r.value?.id===e&&(r.value=null)}catch(e){throw console.error(`Error deleting payment:`,e),e}},I=async e=>{try{g.value=!0;let t=e||{},n=await p.getTrashedPayments(t);f.value=n.data}catch(e){throw console.error(`Error fetching trashed payments:`,e),e}finally{g.value=!1}},L=async e=>{try{let t=await p.unapprovePayment(e),i=n.value.findIndex(t=>t.id===e);i!==-1&&(n.value[i]=t);let a=l.value.findIndex(t=>t.id===e);return a!==-1&&(l.value.splice(a,1),o.value.unshift(t)),r.value?.id===e&&(r.value=t),t}catch(e){throw console.error(`Error unapproving payment:`,e),e}},R=async e=>{try{let t=await p.restorePayment(e),r=f.value.findIndex(t=>t.id===e);return r!==-1&&f.value.splice(r,1),n.value.unshift(t),h.value.total+=1,t.approved_at?l.value.unshift(t):o.value.unshift(t),t}catch(e){throw console.error(`Error restoring payment:`,e),e}},z=async e=>{try{await p.forceDeletePayment(e);let t=f.value.findIndex(t=>t.id===e);t!==-1&&f.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting payment:`,e),e}},B=async()=>{try{let e=await p.getPaymentStats();return m.value=e,e}catch(e){throw console.error(`Error fetching payment statistics:`,e),e}},V=async()=>{try{return await p.getPaymentsForSelect()}catch(e){return console.error(`Error fetching payments for select:`,e),[]}},H=async e=>{try{let t={approved_by:e},n=await p.getCustomerPayments(t);return n.data}catch(e){throw console.error(`Error fetching payments by approver:`,e),e}},U=async e=>{try{let t={account_id:e},n=await p.getCustomerPayments(t);return n.data}catch(e){throw console.error(`Error fetching payments by account:`,e),e}},W=e=>{_.value={..._.value,...e}},G=()=>{_.value={}},K=()=>{r.value=null},q=e=>{let t={..._.value,search:e,page:1};_.value=t,Z(t),$(t,!1)},J=(e,t)=>{let n={..._.value,sort_by:e,sort_direction:t,page:1};_.value=n,Z(n),$(n,!1)},Y=e=>{let t={..._.value,page:e};_.value=t,Z(t),$(t,!1)},X=e=>{let t={..._.value,per_page:e,page:1};_.value=t,Z(t),$(t,!1)},Z=(n,r=!1)=>{let i={...t.query};Object.entries(n).forEach(([e,t])=>{t!=null&&t!==``?i[e]=String(t):delete i[e]});let a=r?`replace`:`push`;e[a]({query:i})},ne=()=>{e.replace({query:{}})},Q=()=>{let e={per_page:50};_.value={...e,...A.value}},$=async(e,t=!0)=>{t&&e&&Z(e),await j(e)},re=()=>{n.value=[],r.value=null,o.value=[],l.value=[],f.value=[],m.value=null,h.value=d(),_.value={},g.value=!1};return i(()=>t.query,async()=>{if(Q(),t.name&&t.name.toString().includes(`payment`))try{await j(_.value)}catch(e){console.error(`Error fetching payments on URL change:`,e)}},{immediate:!1,deep:!0}),{payments:n,currentPayment:r,pendingPayments:o,approvedPayments:l,trashedPayments:f,paymentStats:m,pagination:h,loading:g,filters:_,paymentsByPrefix:v,paymentsByCustomer:y,paymentsByCurrency:b,approvedPaymentsOnly:x,pendingPaymentsOnly:S,paymentsByApprover:C,paymentsByAccount:ee,paymentsForSelect:te,totalPaymentAmount:w,totalPaymentAmountUSD:T,totalApprovedAmount:E,totalPendingAmount:D,paymentsByDateRange:O,paymentsByApprovalDateRange:k,urlParams:A,fetchPayments:j,fetchPayment:M,createPayment:N,updatePayment:P,deletePayment:F,fetchTrashedPayments:I,unapprovePayment:L,restorePayment:R,forceDeletePayment:z,fetchPaymentStats:B,fetchPaymentsForSelect:V,getPaymentsByApprover:H,getPaymentsByAccount:U,updateFilters:W,clearFilters:G,clearCurrentPayment:K,setSearch:q,setSort:J,setPage:Y,setPerPage:X,updateUrlParams:Z,clearUrlParams:ne,syncFiltersWithUrl:Q,fetchData:$,reset:re}});export{m as b};