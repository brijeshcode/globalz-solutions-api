import{aE as e,aW as t,a_ as n,ah as r,ai as i,aj as a,ak as o,al as s,aq as c,ar as l,as as u}from"./index-DvyNiJSL.js";import{b as d}from"./tableUtils-BFc6-TYF.js";var f=class{baseUrl=`/customers/payment-orders`;async getCustomerPaymentOrders(e){try{let t=this.buildQueryParams(e),n=await i(`${this.baseUrl}?${t}`,{loadingMessage:`Loading customer payment orders...`,showLoading:!0});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching customer payment orders:`,e),e}}async getCustomerPaymentOrder(e){try{let t=await i(`${this.baseUrl}/${e}`,{loadingMessage:`Loading customer payment order...`});return t.data.data}catch(e){throw console.error(`Error fetching customer payment order:`,e),e}}async createCustomerPaymentOrder(e){try{let t=await o(this.baseUrl,e,{loadingMessage:`Creating customer payment order...`,showSuccessNotification:!0,successMessage:`Customer payment order created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer payment order:`,e),e}}async updateCustomerPaymentOrder(e,t){try{let n=await s(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer payment order...`,showSuccessNotification:!0,successMessage:`Customer payment order updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer payment order:`,e),e}}async deleteCustomerPaymentOrder(e){try{await r(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting customer payment order...`,showSuccessNotification:!0,successMessage:`Customer payment order deleted successfully`})}catch(e){throw console.error(`Error deleting customer payment order:`,e),e}}async getTrashedPaymentOrders(e){try{let t=this.buildQueryParams(e),n=await i(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed payment orders...`});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching trashed payment orders:`,e),e}}async approvePaymentOrder(e,t){try{let n=await a(`${this.baseUrl}/${e}/approve`,t,{loadingMessage:`Approving payment order...`,showSuccessNotification:!0,successMessage:`Payment order approved successfully`});return n.data.data}catch(e){throw console.error(`Error approving payment order:`,e),e}}async restorePaymentOrder(e){try{let t=await a(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring payment order...`,showSuccessNotification:!0,successMessage:`Payment order restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring payment order:`,e),e}}async forceDeletePaymentOrder(e){try{await r(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting payment order...`,showSuccessNotification:!0,successMessage:`Payment order permanently deleted`})}catch(e){throw console.error(`Error permanently deleting payment order:`,e),e}}async getPaymentOrderStats(){try{let e=await i(`${this.baseUrl}/stats`,{loadingMessage:`Loading payment order statistics...`});return e.data.data}catch(e){throw console.error(`Error fetching payment order statistics:`,e),e}}async getPaymentOrdersForSelect(){try{let e=await i(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.map(e=>({value:e.id,label:`${e.code} - ${e.amount}`,disabled:!1}))}catch(e){throw console.error(`Error fetching payment orders for select:`,e),e}}async searchPaymentOrders(e){try{let t=await i(`${this.baseUrl}/search?query=${encodeURIComponent(e)}`,{showLoading:!1});return t.data.data}catch(e){throw console.error(`Error searching payment orders:`,e),e}}async getPaymentOrdersByCustomer(e){try{let t=await i(`${this.baseUrl}/by-customer/${e}`,{loadingMessage:`Loading customer payment orders...`});return t.data.data}catch(e){throw console.error(`Error fetching payment orders by customer:`,e),e}}async getPaymentOrdersByCurrency(e){try{let t=await i(`${this.baseUrl}/by-currency/${e}`,{loadingMessage:`Loading payment orders by currency...`});return t.data.data}catch(e){throw console.error(`Error fetching payment orders by currency:`,e),e}}async getPaymentOrdersByPrefix(e){try{let t=await i(`${this.baseUrl}/by-prefix/${e}`,{loadingMessage:`Loading payment orders by prefix...`});return t.data.data}catch(e){throw console.error(`Error fetching payment orders by prefix:`,e),e}}async getPaymentOrdersByDateRange(e,t){try{let n=await i(`${this.baseUrl}/by-date-range?start_date=${e}&end_date=${t}`,{loadingMessage:`Loading payment orders by date range...`});return n.data.data}catch(e){throw console.error(`Error fetching payment orders by date range:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const p=new f,m=u(`customerPaymentOrders`,()=>{let r=l(),i=c(),a=n([]),o=n(null),s=n([]),u=n([]),f=n(null),m=n(d()),h=n(!1),g=n({per_page:50}),_=e(()=>e=>a.value.filter(t=>t.prefix===e)),v=e(()=>e=>a.value.filter(t=>t.customer_id===e)),y=e(()=>e=>a.value.filter(t=>t.currency_id===e)),b=e(()=>a.value.map(e=>({value:e.id,label:`${e.code} - ${e.amount}`,disabled:!1}))),x=e(()=>a.value.reduce((e,t)=>e+t.amount,0)),S=e(()=>a.value.reduce((e,t)=>e+t.amount_usd,0)),C=e(()=>(e,t)=>a.value.filter(n=>{let r=new Date(n.date),i=new Date(e),a=new Date(t);return r>=i&&r<=a})),w=e(()=>{let e={};return Object.entries(i.query).forEach(([t,n])=>{n&&typeof n==`string`&&(e[t]=n)}),e}),T=async e=>{try{h.value=!0,e&&(g.value={...g.value,...e});let t=await p.getCustomerPaymentOrders(g.value);a.value=t.data,m.value=t.pagination}catch(e){throw console.error(`Error fetching payment orders:`,e),e}finally{h.value=!1}},E=async e=>{try{let t=await p.getCustomerPaymentOrder(e);return o.value=t,t}catch(e){throw console.error(`Error fetching payment order:`,e),e}},D=async e=>{try{let t=await p.createCustomerPaymentOrder(e);return a.value.unshift(t),m.value.total+=1,t}catch(e){throw console.error(`Error creating payment order:`,e),e}},O=async(e,t)=>{try{let n=await p.updateCustomerPaymentOrder(e,t),r=a.value.findIndex(t=>t.id===e);return r!==-1&&(a.value[r]=n),o.value?.id===e&&(o.value=n),n}catch(e){throw console.error(`Error updating payment order:`,e),e}},k=async e=>{try{await p.deleteCustomerPaymentOrder(e);let t=a.value.findIndex(t=>t.id===e);t!==-1&&a.value.splice(t,1),--m.value.total,o.value?.id===e&&(o.value=null)}catch(e){throw console.error(`Error deleting payment order:`,e),e}},A=async e=>{try{h.value=!0;let t=e||{},n=await p.getCustomerPaymentOrders(t);s.value=n.data,m.value=n.pagination}catch(e){throw console.error(`Error fetching pending orders:`,e),e}finally{h.value=!1}},j=async e=>{try{h.value=!0;let t=e||{},n=await p.getTrashedPaymentOrders(t);u.value=n.data}catch(e){throw console.error(`Error fetching trashed orders:`,e),e}finally{h.value=!1}},M=async e=>{try{let t=await p.restorePaymentOrder(e),n=u.value.findIndex(t=>t.id===e);return n!==-1&&u.value.splice(n,1),a.value.unshift(t),m.value.total+=1,t}catch(e){throw console.error(`Error restoring payment order:`,e),e}},N=async e=>{try{await p.forceDeletePaymentOrder(e);let t=u.value.findIndex(t=>t.id===e);t!==-1&&u.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting payment order:`,e),e}},P=async(e,t)=>{try{let n=await p.approvePaymentOrder(e,t),r=a.value.findIndex(t=>t.id===e);r!==-1&&(a.value[r]=n);let i=s.value.findIndex(t=>t.id===e);return i!==-1&&s.value.splice(i,1),o.value?.id===e&&(o.value=n),n}catch(e){throw console.error(`Error approving payment order:`,e),e}},F=async e=>{try{return await p.searchPaymentOrders(e)}catch(e){throw console.error(`Error searching payment orders:`,e),e}},I=async()=>{try{return await p.getPaymentOrdersForSelect()}catch(e){return console.error(`Error fetching orders for select:`,e),[]}},L=async e=>{try{return await p.getPaymentOrdersByCustomer(e)}catch(e){throw console.error(`Error fetching orders by customer:`,e),e}},R=async e=>{try{return await p.getPaymentOrdersByCurrency(e)}catch(e){throw console.error(`Error fetching orders by currency:`,e),e}},z=async e=>{try{return await p.getPaymentOrdersByPrefix(e)}catch(e){throw console.error(`Error fetching orders by prefix:`,e),e}},B=async(e,t)=>{try{return await p.getPaymentOrdersByDateRange(e,t)}catch(e){throw console.error(`Error fetching orders by date range:`,e),e}},V=async e=>{try{let e=await p.getPaymentOrderStats();return f.value=e,e}catch(e){throw console.error(`Error fetching payment order statistics:`,e),e}},H=e=>{g.value={...g.value,...e}},U=()=>{g.value={}},W=()=>{o.value=null},G=e=>{let t={...g.value,search:e,page:1};g.value=t,Y(t),Q(t,!1)},K=(e,t)=>{let n={...g.value,sort_by:e,sort_direction:t,page:1};g.value=n,Y(n),Q(n,!1)},q=e=>{let t={...g.value,page:e};g.value=t,Y(t),Q(t,!1)},J=e=>{let t={...g.value,per_page:e,page:1};g.value=t,Y(t),Q(t,!1)},Y=(e,t=!1)=>{let n={...i.query};Object.entries(e).forEach(([e,t])=>{t!=null&&t!==``?n[e]=String(t):delete n[e]});let a=t?`replace`:`push`;r[a]({query:n})},X=()=>{r.replace({query:{}})},Z=()=>{let e={per_page:50};g.value={...e,...w.value}},Q=async(e,t=!0)=>{t&&e&&Y(e),await T(e)},$=()=>{a.value=[],o.value=null,s.value=[],u.value=[],f.value=null,m.value=d(),g.value={},h.value=!1};return t(()=>i.query,async()=>{if(Z(),i.name&&i.name.toString().includes(`payment-order`))try{await T(g.value)}catch(e){console.error(`Error fetching payment orders on URL change:`,e)}},{immediate:!1,deep:!0}),{paymentOrders:a,currentPaymentOrder:o,pendingOrders:s,trashedOrders:u,paymentOrderStats:f,pagination:m,loading:h,filters:g,ordersByPrefix:_,ordersByCustomer:v,ordersByCurrency:y,ordersForSelect:b,totalOrderAmount:x,totalOrderAmountUSD:S,ordersByDateRange:C,urlParams:w,fetchPaymentOrders:T,fetchPaymentOrder:E,createPaymentOrder:D,updatePaymentOrder:O,deletePaymentOrder:k,fetchPendingOrders:A,fetchTrashedOrders:j,restoreOrder:M,forceDeleteOrder:N,approveOrder:P,searchOrders:F,fetchOrdersForSelect:I,getOrdersByCustomer:L,getOrdersByCurrency:R,getOrdersByPrefix:z,getOrdersByDateRange:B,fetchPaymentOrderStats:V,updateFilters:H,clearFilters:U,clearCurrentOrder:W,setSearch:G,setSort:K,setPage:q,setPerPage:J,updateUrlParams:Y,clearUrlParams:X,syncFiltersWithUrl:Z,fetchData:Q,reset:$}});export{m as b};