import{aE as e,a_ as t,ah as n,ai as r,aj as i,ak as a,al as o,as as s}from"./index-DvyNiJSL.js";import{b as c}from"./tableUtils-BFc6-TYF.js";var l=class{baseUrl=`/setups/employees/departments`;async getDepartments(e){try{let t=this.buildQueryParams(e),n=await r(`${this.baseUrl}?${t}`,{loadingMessage:`Loading departments...`,showLoading:!0});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching departments:`,e),e}}async getDepartment(e){try{let t=await r(`${this.baseUrl}/${e}`,{loadingMessage:`Loading department...`});return t.data.data}catch(e){throw console.error(`Error fetching department:`,e),e}}async createDepartment(e){try{let t=await a(this.baseUrl,e,{loadingMessage:`Creating department...`,showSuccessNotification:!0,successMessage:`Department created successfully`});return t.data.data}catch(e){throw console.error(`Error creating department:`,e),e}}async updateDepartment(e,t){try{let n=await o(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating department...`,showSuccessNotification:!0,successMessage:`Department updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating department:`,e),e}}async deleteDepartment(e){try{await n(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting department...`,showSuccessNotification:!0,successMessage:`Department deleted successfully`})}catch(e){throw console.error(`Error deleting department:`,e),e}}async getTrashedDepartments(e){try{let t=this.buildQueryParams(e),n=await r(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed departments...`});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching trashed departments:`,e),e}}async restoreDepartment(e){try{let t=await i(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring department...`,showSuccessNotification:!0,successMessage:`Department restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring department:`,e),e}}async forceDeleteDepartment(e){try{await n(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting department...`,showSuccessNotification:!0,successMessage:`Department permanently deleted`})}catch(e){throw console.error(`Error permanently deleting department:`,e),e}}async getDepartmentsForSelect(){try{let e=await r(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1}))}catch(e){throw console.error(`Error fetching departments for select:`,e),e}}async getDepartmentHierarchy(){try{let e=await r(`${this.baseUrl}/hierarchy`,{loadingMessage:`Loading department hierarchy...`});return e.data.data}catch(e){throw console.error(`Error fetching department hierarchy:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=s(`departments`,()=>{let n=t([]),r=t(null),i=t([]),a=t([]),o=t(c()),s=t(!1),l=t({}),d=e(()=>n.value.filter(e=>e.is_active)),f=e(()=>n.value.filter(e=>!e.is_active)),p=e(()=>n.value.filter(e=>!e.parent_id)),m=e(()=>d.value.map(e=>({value:e.id,label:e.name,disabled:!1}))),h=async e=>{try{s.value=!0,e&&(l.value={...l.value,...e});let t=await u.getDepartments(l.value);n.value=t.data,o.value=t.pagination}catch(e){throw console.error(`Error fetching departments:`,e),e}finally{s.value=!1}},g=async e=>{try{let t=await u.getDepartment(e);return r.value=t,t}catch(e){throw console.error(`Error fetching department:`,e),e}},_=async e=>{try{let t=await u.createDepartment(e);return n.value.unshift(t),o.value.total+=1,t}catch(e){throw console.error(`Error creating department:`,e),e}},v=async(e,t)=>{try{let i=await u.updateDepartment(e,t),a=n.value.findIndex(t=>t.id===e);return a!==-1&&(n.value[a]=i),r.value?.id===e&&(r.value=i),i}catch(e){throw console.error(`Error updating department:`,e),e}},y=async e=>{try{await u.deleteDepartment(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1),--o.value.total,r.value?.id===e&&(r.value=null)}catch(e){throw console.error(`Error deleting department:`,e),e}},b=async e=>{try{s.value=!0;let t=e||{},n=await u.getTrashedDepartments(t);i.value=n.data}catch(e){throw console.error(`Error fetching trashed departments:`,e),e}finally{s.value=!1}},x=async e=>{try{let t=await u.restoreDepartment(e),r=i.value.findIndex(t=>t.id===e);return r!==-1&&i.value.splice(r,1),n.value.unshift(t),o.value.total+=1,t}catch(e){throw console.error(`Error restoring department:`,e),e}},S=async e=>{try{await u.forceDeleteDepartment(e);let t=i.value.findIndex(t=>t.id===e);t!==-1&&i.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting department:`,e),e}},C=async()=>{try{s.value=!0;let e=await u.getDepartmentHierarchy();return a.value=e,e}catch(e){throw console.error(`Error fetching department hierarchy:`,e),e}finally{s.value=!1}},w=e=>{l.value={...l.value,...e}},T=()=>{l.value={}},E=()=>{r.value=null},D=()=>{n.value=[],r.value=null,i.value=[],a.value=[],o.value=c(),l.value={},s.value=!1},O=async()=>{try{return await u.getDepartmentsForSelect()}catch(e){return console.error(`Error fetching departments for select:`,e),[]}};return{departments:n,currentDepartment:r,trashedDepartments:i,departmentHierarchy:a,pagination:o,loading:s,filters:l,activeDepartments:d,inactiveDepartments:f,rootDepartments:p,departmentsForSelect:m,fetchDepartments:h,fetchDepartment:g,createDepartment:_,updateDepartment:v,deleteDepartment:y,fetchTrashedDepartments:b,restoreDepartment:x,forceDeleteDepartment:S,fetchDepartmentHierarchy:C,updateFilters:w,clearFilters:T,clearCurrentDepartment:E,reset:D,fetchDepartmentsForSelect:O}});var f=d;export{f as b,d as c};