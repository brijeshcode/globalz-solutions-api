import{aU as e,ab as t,ac as n,ad as r,ae as i,af as a,am as o,ay as s}from"./index-D1LXHm0l.js";import{b as c}from"./tableUtils-jdfVzp2e.js";var l=class{baseUrl=`/employees`;async getEmployees(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}?${t}`,{loadingMessage:`Loading employees...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching employees:`,e),e}}async getEmployee(e){try{let t=await n(`${this.baseUrl}/${e}`,{loadingMessage:`Loading employee...`});return t.data.data}catch(e){throw console.error(`Error fetching employee:`,e),e}}async createEmployee(e){try{let t=await i(this.baseUrl,e,{loadingMessage:`Creating employee...`,showSuccessNotification:!0,successMessage:`Employee created successfully`});return t.data.data}catch(e){throw console.error(`Error creating employee:`,e),e}}async updateEmployee(e,t){try{let n=await a(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating employee...`,showSuccessNotification:!0,successMessage:`Employee updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating employee:`,e),e}}async deleteEmployee(e){try{await t(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting employee...`,showSuccessNotification:!0,successMessage:`Employee deleted successfully`})}catch(e){throw console.error(`Error deleting employee:`,e),e}}async getTrashedEmployees(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed employees...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed employees:`,e),e}}async restoreEmployee(e){try{let t=await r(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring employee...`,showSuccessNotification:!0,successMessage:`Employee restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring employee:`,e),e}}async forceDeleteEmployee(e){try{await t(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting employee...`,showSuccessNotification:!0,successMessage:`Employee permanently deleted`})}catch(e){throw console.error(`Error permanently deleting employee:`,e),e}}async getEmployeesForSelect(){try{let e=await n(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1}))}catch(e){throw console.error(`Error fetching employees for select:`,e),e}}async getEmployeesByDepartment(e){try{let t=await n(`${this.baseUrl}/by-department/${e}`,{loadingMessage:`Loading employees by department...`});return t.data.data}catch(e){throw console.error(`Error fetching employees by department:`,e),e}}async searchEmployees(e){try{let t=await n(`${this.baseUrl}/search?query=${encodeURIComponent(e)}`,{showLoading:!1});return t.data.data}catch(e){throw console.error(`Error searching employees:`,e),e}}async getEmployeeStats(){try{let e=await n(`${this.baseUrl}/stats`,{loadingMessage:`Loading employee statistics...`});return e.data.data}catch(e){throw console.error(`Error fetching employee statistics:`,e),e}}async assignWarehouse(e,t){try{let n=await r(`${this.baseUrl}/${e}/assign-warehouse`,{warehouses:t},{loadingMessage:`Assigning warehouses...`,showSuccessNotification:!0,successMessage:`Employee warehouses assigned successfully`});return n.data.data}catch(e){throw console.error(`Error assigning warehouses:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=o(`employees`,()=>{let t=e([]),n=e(null),r=e([]),i=e(null),a=e(c()),o=e(!1),l=e({}),d=s(()=>t.value.filter(e=>e.is_active)),f=s(()=>t.value.filter(e=>!e.is_active)),p=s(()=>d.value.map(e=>({value:e.id,label:e.name,disabled:!1}))),m=s(()=>e=>t.value.filter(t=>t.department_id===e)),h=s(()=>t.value.filter(e=>e.user_id)),g=s(()=>t.value.filter(e=>!e.user_id)),_=s(()=>t.value.filter(e=>e.department&&e.department.name===`Sales`)),v=async e=>{try{o.value=!0,e&&(l.value={...l.value,...e});let n=await u.getEmployees(l.value);t.value=n.data,a.value=n.pagination}catch(e){throw console.error(`Error fetching employees:`,e),e}finally{o.value=!1}},y=async e=>{try{let t=await u.getEmployee(e);return n.value=t,t}catch(e){throw console.error(`Error fetching employee:`,e),e}},b=async e=>{try{let n=await u.createEmployee(e);return t.value.unshift(n),a.value.total+=1,n}catch(e){throw console.error(`Error creating employee:`,e),e}},x=async(e,r)=>{try{let i=await u.updateEmployee(e,r),a=t.value.findIndex(t=>t.id===e);return a!==-1&&(t.value[a]=i),n.value?.id===e&&(n.value=i),i}catch(e){throw console.error(`Error updating employee:`,e),e}},S=async e=>{try{await u.deleteEmployee(e);let r=t.value.findIndex(t=>t.id===e);r!==-1&&t.value.splice(r,1),--a.value.total,n.value?.id===e&&(n.value=null)}catch(e){throw console.error(`Error deleting employee:`,e),e}},C=async e=>{try{o.value=!0;let t=e||{},n=await u.getTrashedEmployees(t);r.value=n.data}catch(e){throw console.error(`Error fetching trashed employees:`,e),e}finally{o.value=!1}},w=async e=>{try{let n=await u.restoreEmployee(e),i=r.value.findIndex(t=>t.id===e);return i!==-1&&r.value.splice(i,1),t.value.unshift(n),a.value.total+=1,n}catch(e){throw console.error(`Error restoring employee:`,e),e}},T=async e=>{try{await u.forceDeleteEmployee(e);let t=r.value.findIndex(t=>t.id===e);t!==-1&&r.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting employee:`,e),e}},E=async()=>{try{let e=await u.getEmployeeStats();return i.value=e,e}catch(e){throw console.error(`Error fetching employee statistics:`,e),e}},D=async e=>{try{return await u.getEmployeesByDepartment(e)}catch(e){throw console.error(`Error fetching employees by department:`,e),e}},O=async e=>{try{return await u.searchEmployees(e)}catch(e){throw console.error(`Error searching employees:`,e),e}},k=async()=>{try{return await u.getEmployeesForSelect()}catch(e){return console.error(`Error fetching employees for select:`,e),[]}},A=async(e,r)=>{try{let i=await u.assignWarehouse(e,r),a=t.value.findIndex(t=>t.id===e);return a!==-1&&(t.value[a]=i),n.value?.id===e&&(n.value=i),i}catch(e){throw console.error(`Error assigning warehouse:`,e),e}},j=e=>{l.value={...l.value,...e}},M=()=>{l.value={}},N=()=>{n.value=null},P=()=>{t.value=[],n.value=null,r.value=[],i.value=null,a.value=c(),l.value={},o.value=!1};return{employees:t,currentEmployee:n,trashedEmployees:r,employeeStats:i,pagination:a,loading:o,filters:l,activeEmployees:d,inactiveEmployees:f,employeesForSelect:p,employeesByDepartment:m,employeesWithUser:h,employeesWithoutUser:g,salespersons:_,fetchEmployees:v,fetchEmployee:y,createEmployee:b,updateEmployee:x,deleteEmployee:S,fetchTrashedEmployees:C,restoreEmployee:w,forceDeleteEmployee:T,fetchEmployeeStats:E,fetchEmployeesByDepartment:D,searchEmployees:O,fetchEmployeesForSelect:k,assignWarehouse:A,updateFilters:j,clearFilters:M,clearCurrentEmployee:N,reset:P}});export{d as b};