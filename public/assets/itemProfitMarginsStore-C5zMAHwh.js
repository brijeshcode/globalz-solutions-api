import{aU as e,ab as t,ac as n,ad as r,ae as i,af as a,am as o,ay as s}from"./index-B4L_8Est.js";import{b as c}from"./tableUtils-jdfVzp2e.js";var l=class{baseUrl=`/setups/items/profit-margins`;async getItemProfitMargins(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}?${t}`,{loadingMessage:`Loading item profit margins...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching item profit margins:`,e),e}}async getItemProfitMargin(e){try{let t=await n(`${this.baseUrl}/${e}`,{loadingMessage:`Loading item profit margin...`});return t.data.data}catch(e){throw console.error(`Error fetching item profit margin:`,e),e}}async createItemProfitMargin(e){try{let t=await i(this.baseUrl,e,{loadingMessage:`Creating item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin created successfully`});return t.data.data}catch(e){throw console.error(`Error creating item profit margin:`,e),e}}async updateItemProfitMargin(e,t){try{let n=await a(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating item profit margin:`,e),e}}async deleteItemProfitMargin(e){try{await t(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin deleted successfully`})}catch(e){throw console.error(`Error deleting item profit margin:`,e),e}}async getTrashedItemProfitMargins(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed item profit margins...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed item profit margins:`,e),e}}async restoreItemProfitMargin(e){try{let t=await r(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring item profit margin:`,e),e}}async forceDeleteItemProfitMargin(e){try{await t(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin permanently deleted`})}catch(e){throw console.error(`Error permanently deleting item profit margin:`,e),e}}async getItemProfitMarginsForSelect(){try{let e=await n(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,marginPercentage:e.margin_percentage,disabled:!1}))}catch(e){throw console.error(`Error fetching item profit margins for select:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=o(`itemProfitMargins`,()=>{let t=e([]),n=e(null),r=e([]),i=e(c()),a=e(!1),o=e({}),l=s(()=>t.value.filter(e=>e.is_active)),d=s(()=>t.value.filter(e=>!e.is_active)),f=s(()=>l.value.map(e=>({value:e.id,label:e.name,marginPercentage:e.margin_percentage,disabled:!1}))),p=async e=>{try{a.value=!0,e&&(o.value={...o.value,...e});let n=await u.getItemProfitMargins(o.value);t.value=n.data,i.value=n.pagination}catch(e){throw console.error(`Error fetching item profit margins:`,e),e}finally{a.value=!1}},m=async e=>{try{let t=await u.getItemProfitMargin(e);return n.value=t,t}catch(e){throw console.error(`Error fetching item profit margin:`,e),e}},h=async e=>{try{let n=await u.createItemProfitMargin(e);return t.value.unshift(n),i.value.total+=1,n}catch(e){throw console.error(`Error creating item profit margin:`,e),e}},g=async(e,r)=>{try{let i=await u.updateItemProfitMargin(e,r),a=t.value.findIndex(t=>t.id===e);return a!==-1&&(t.value[a]=i),n.value?.id===e&&(n.value=i),i}catch(e){throw console.error(`Error updating item profit margin:`,e),e}},_=async e=>{try{await u.deleteItemProfitMargin(e);let r=t.value.findIndex(t=>t.id===e);r!==-1&&t.value.splice(r,1),--i.value.total,n.value?.id===e&&(n.value=null)}catch(e){throw console.error(`Error deleting item profit margin:`,e),e}},v=async e=>{try{a.value=!0;let t=e||{},n=await u.getTrashedItemProfitMargins(t);r.value=n.data}catch(e){throw console.error(`Error fetching trashed item profit margins:`,e),e}finally{a.value=!1}},y=async e=>{try{let n=await u.restoreItemProfitMargin(e),a=r.value.findIndex(t=>t.id===e);return a!==-1&&r.value.splice(a,1),t.value.unshift(n),i.value.total+=1,n}catch(e){throw console.error(`Error restoring item profit margin:`,e),e}},b=async e=>{try{await u.forceDeleteItemProfitMargin(e);let t=r.value.findIndex(t=>t.id===e);t!==-1&&r.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting item profit margin:`,e),e}},x=e=>{o.value={...o.value,...e}},S=()=>{o.value={}},C=()=>{n.value=null},w=()=>{t.value=[],n.value=null,r.value=[],i.value=c(),o.value={},a.value=!1},T=async()=>{try{return await u.getItemProfitMarginsForSelect()}catch(e){return console.error(`Error fetching item profit margins for select:`,e),[]}};return{itemProfitMargins:t,currentItemProfitMargin:n,trashedItemProfitMargins:r,pagination:i,loading:a,filters:o,activeItemProfitMargins:l,inactiveItemProfitMargins:d,itemProfitMarginsForSelect:f,fetchItemProfitMargins:p,fetchItemProfitMargin:m,createItemProfitMargin:h,updateItemProfitMargin:g,deleteItemProfitMargin:_,fetchTrashedItemProfitMargins:v,restoreItemProfitMargin:y,forceDeleteItemProfitMargin:b,updateFilters:x,clearFilters:S,clearCurrentItemProfitMargin:C,reset:w,fetchItemProfitMarginsForSelect:T}});export{d as b};