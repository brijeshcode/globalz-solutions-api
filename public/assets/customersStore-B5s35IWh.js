import{$ as e,Q as t,R as n,S as r,T as i,U as a,aa as o,aw as s}from"./index-CxTKwM3X.js";var c=class{baseUrl=`/customers`;async getCustomers(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}?${t}`,{loadingMessage:`Loading customers...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching customers:`,e),e}}async getCustomer(e){try{let t=await n(`${this.baseUrl}/${e}`,{loadingMessage:`Loading customer...`});return t.data.data}catch(e){throw console.error(`Error fetching customer:`,e),e}}async createCustomer(e){try{let t=await i(this.baseUrl,e,{loadingMessage:`Creating customer...`,showSuccessNotification:!0,successMessage:`Customer created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer:`,e),e}}async createCustomerWithFiles(e){try{console.log(`reach service`);let t=await i(this.baseUrl,e,{loadingMessage:`Creating customer...`,showSuccessNotification:!0,successMessage:`Customer created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer with files:`,e),e}}async updateCustomer(e,t){try{let n=await a(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer...`,showSuccessNotification:!0,successMessage:`Customer updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer:`,e),e}}async updateCustomerWithFiles(e,t){try{let n=await i(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer...`,showSuccessNotification:!0,successMessage:`Customer updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer with files:`,e),e}}async deleteCustomer(e){try{await t(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting customer...`,showSuccessNotification:!0,successMessage:`Customer deleted successfully`})}catch(e){throw console.error(`Error deleting customer:`,e),e}}async getTrashedCustomers(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed customers...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed customers:`,e),e}}async restoreCustomer(e){try{let t=await r(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring customer...`,showSuccessNotification:!0,successMessage:`Customer restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring customer:`,e),e}}async forceDeleteCustomer(e){try{await t(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting customer...`,showSuccessNotification:!0,successMessage:`Customer permanently deleted`})}catch(e){throw console.error(`Error permanently deleting customer:`,e),e}}async getCustomersForSelect(){try{let e=await n(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1,code:e.code,balance:e.current_balance}))}catch(e){throw console.error(`Error fetching customers for select:`,e),e}}async getCustomerStats(){try{let e=await n(`${this.baseUrl}/stats`,{loadingMessage:`Loading customer statistics...`});return e.data.data}catch(e){throw console.error(`Error fetching customer statistics:`,e),e}}async exportCustomers(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}/export?${t}`,{loadingMessage:`Exporting customers...`,responseType:`blob`});return r.data}catch(e){throw console.error(`Error exporting customers:`,e),e}}async getNextCustomerCode(){try{let e=await n(`${this.baseUrl}/next-code`,{showLoading:!1});return e.data.data.code}catch(e){throw console.error(`Error fetching next customer code:`,e),e}}async getSalespersons(){try{let e=await n(`${this.baseUrl}/salespersons`,{showLoading:!1});return e.data.data}catch(e){throw console.error(`Error fetching salespersons:`,e),e}}async searchCustomers(e){try{let t=await n(`${this.baseUrl}/search?query=${encodeURIComponent(e)}`,{showLoading:!1});return t.data.data}catch(e){throw console.error(`Error searching customers:`,e),e}}async getCustomersByType(e){try{let t=await n(`${this.baseUrl}/by-type/${e}`,{loadingMessage:`Loading customers by type...`});return t.data.data}catch(e){throw console.error(`Error fetching customers by type:`,e),e}}async getCustomersByZone(e){try{let t=await n(`${this.baseUrl}/by-zone/${e}`,{loadingMessage:`Loading customers by zone...`});return t.data.data}catch(e){throw console.error(`Error fetching customers by zone:`,e),e}}async getCustomersBySalesperson(e){try{let t=await n(`${this.baseUrl}/by-salesperson/${e}`,{loadingMessage:`Loading customers by salesperson...`});return t.data.data}catch(e){throw console.error(`Error fetching customers by salesperson:`,e),e}}async updateCustomerBalance(e,t){try{let n=await i(`${this.baseUrl}/${e}/balance`,t,{loadingMessage:`Updating customer balance...`,showSuccessNotification:!0,successMessage:`Customer balance updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer balance:`,e),e}}async getCustomerBalanceHistory(e){try{let t=await n(`${this.baseUrl}/${e}/balance-history`,{loadingMessage:`Loading balance history...`});return t.data.data}catch(e){throw console.error(`Error fetching customer balance history:`,e),e}}async getCustomerChildren(e){try{let t=await n(`${this.baseUrl}/${e}/children`,{loadingMessage:`Loading customer children...`});return t.data.data}catch(e){throw console.error(`Error fetching customer children:`,e),e}}async checkCreditLimit(e){try{let t=await n(`${this.baseUrl}/${e}/credit-status`,{showLoading:!1});return t.data.data}catch(e){throw console.error(`Error checking credit limit:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const l=new c,u=e(`customers`,()=>{let e=s([]),t=s(null),n=s([]),r=s(null),i=s([]),a=s({current_page:1,per_page:20,total:0,last_page:1,from:null,to:null,has_more_pages:!1,next_page_url:null,prev_page_url:null,first_page_url:``,last_page_url:``}),c=s(!1),u=s({}),d=o(()=>e.value.filter(e=>e.is_active)),f=o(()=>e.value.filter(e=>!e.is_active)),p=o(()=>d.value.map(e=>({value:e.id,label:e.name,disabled:!1,code:e.code,balance:e.current_balance}))),m=o(()=>t=>e.value.filter(e=>e.customer_type_id===t)),h=o(()=>t=>e.value.filter(e=>e.customer_zone_id===t)),g=o(()=>t=>e.value.filter(e=>e.salesperson_id===t)),_=o(()=>e.value.filter(e=>e.is_over_credit_limit)),v=o(()=>e.value.filter(e=>e.current_balance!==0)),y=o(()=>u.value),b=async t=>{try{c.value=!0,t&&(u.value={...u.value,...t});let n=await l.getCustomers(u.value);e.value=n.data,a.value=n.pagination}catch(e){throw console.error(`Error fetching customers:`,e),e}finally{c.value=!1}},x=async e=>{try{let n=await l.getCustomer(e);return t.value=n,n}catch(e){throw console.error(`Error fetching customer:`,e),e}},S=async t=>{try{let n=await l.createCustomer(t);return e.value.unshift(n),a.value.total+=1,n}catch(e){throw console.error(`Error creating customer:`,e),e}},C=async t=>{try{console.log(`reach stored`);let n=await l.createCustomerWithFiles(t);return e.value.unshift(n),a.value.total+=1,n}catch(e){throw console.error(`Error creating customer with files:`,e),e}},w=async(n,r)=>{try{let i=await l.updateCustomer(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating customer:`,e),e}},T=async(n,r)=>{try{let i=await l.updateCustomerWithFiles(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating customer with files:`,e),e}},E=async n=>{try{await l.deleteCustomer(n);let r=e.value.findIndex(e=>e.id===n);r!==-1&&e.value.splice(r,1),--a.value.total,t.value?.id===n&&(t.value=null)}catch(e){throw console.error(`Error deleting customer:`,e),e}},D=async e=>{try{c.value=!0;let t=e||{},r=await l.getTrashedCustomers(t);n.value=r.data}catch(e){throw console.error(`Error fetching trashed customers:`,e),e}finally{c.value=!1}},O=async t=>{try{let r=await l.restoreCustomer(t),i=n.value.findIndex(e=>e.id===t);return i!==-1&&n.value.splice(i,1),e.value.unshift(r),a.value.total+=1,r}catch(e){throw console.error(`Error restoring customer:`,e),e}},k=async e=>{try{await l.forceDeleteCustomer(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting customer:`,e),e}},A=async()=>{try{let e=await l.getCustomerStats();return r.value=e,e}catch(e){throw console.error(`Error fetching customer statistics:`,e),e}},j=async()=>{try{let e=await l.getSalespersons();return i.value=e,e}catch(e){throw console.error(`Error fetching salespersons:`,e),e}},M=async()=>{try{return await l.getNextCustomerCode()}catch(e){throw console.error(`Error getting next customer code:`,e),e}},N=async e=>{try{return await l.exportCustomers(e)}catch(e){throw console.error(`Error exporting customers:`,e),e}},P=async e=>{try{return await l.searchCustomers(e)}catch(e){throw console.error(`Error searching customers:`,e),e}},F=async(n,r)=>{try{let i=await l.updateCustomerBalance(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating customer balance:`,e),e}},I=async e=>{try{return await l.getCustomerBalanceHistory(e)}catch(e){throw console.error(`Error fetching customer balance history:`,e),e}},L=async e=>{try{return await l.checkCreditLimit(e)}catch(e){throw console.error(`Error checking customer credit limit:`,e),e}},R=async e=>{try{return await l.getCustomerChildren(e)}catch(e){throw console.error(`Error fetching customer children:`,e),e}},z=async()=>{try{return await l.getCustomersForSelect()}catch(e){return console.error(`Error fetching customers for select:`,e),[]}},B=e=>{u.value={...u.value,...e}},V=()=>{u.value={}},H=()=>{t.value=null},U=e=>{u.value={...u.value,search:e},Y()},W=(e,t)=>{u.value={...u.value,sort_by:e,sort_direction:t},Y()},G=e=>{u.value={...u.value,page:e},Y()},K=e=>{u.value={...u.value,per_page:e,page:1},Y()},q=e=>{u.value={...u.value,...e},Y()},J=()=>{},Y=async e=>{await b(e)},X=()=>{e.value=[],t.value=null,n.value=[],r.value=null,i.value=[],a.value={current_page:1,per_page:20,total:0,last_page:1,from:null,to:null,has_more_pages:!1,next_page_url:null,prev_page_url:null,first_page_url:``,last_page_url:``},u.value={},c.value=!1};return{customers:e,currentCustomer:t,trashedCustomers:n,customerStats:r,salespersons:i,pagination:a,loading:c,filters:u,activeCustomers:d,inactiveCustomers:f,customersForSelect:p,customersByType:m,customersByZone:h,customersBySalesperson:g,customersOverCreditLimit:_,customersWithBalance:v,urlParams:y,fetchCustomers:b,fetchCustomer:x,createCustomer:S,createCustomerWithFiles:C,updateCustomer:w,updateCustomerWithFiles:T,deleteCustomer:E,fetchTrashedCustomers:D,restoreCustomer:O,forceDeleteCustomer:k,fetchCustomerStats:A,fetchSalespersons:j,getNextCustomerCode:M,exportCustomers:N,searchCustomers:P,updateCustomerBalance:F,getCustomerBalanceHistory:I,checkCustomerCreditLimit:L,getCustomerChildren:R,fetchCustomersForSelect:z,updateFilters:B,clearFilters:V,clearCurrentCustomer:H,setSearch:U,setSort:W,setPage:G,setPerPage:K,updateUrlParams:q,syncFiltersWithUrl:J,fetchData:Y,reset:X}});export{u as b};