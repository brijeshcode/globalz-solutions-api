import{aE as e,a_ as t,ah as n,ai as r,aj as i,ak as a,al as o,as as s}from"./index-DvyNiJSL.js";import{b as c}from"./tableUtils-BFc6-TYF.js";var l=class{baseUrl=`/setups/items/profit-margins`;async getItemProfitMargins(e){try{let t=this.buildQueryParams(e),n=await r(`${this.baseUrl}?${t}`,{loadingMessage:`Loading item profit margins...`,showLoading:!0});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching item profit margins:`,e),e}}async getItemProfitMargin(e){try{let t=await r(`${this.baseUrl}/${e}`,{loadingMessage:`Loading item profit margin...`});return t.data.data}catch(e){throw console.error(`Error fetching item profit margin:`,e),e}}async createItemProfitMargin(e){try{let t=await a(this.baseUrl,e,{loadingMessage:`Creating item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin created successfully`});return t.data.data}catch(e){throw console.error(`Error creating item profit margin:`,e),e}}async updateItemProfitMargin(e,t){try{let n=await o(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating item profit margin:`,e),e}}async deleteItemProfitMargin(e){try{await n(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin deleted successfully`})}catch(e){throw console.error(`Error deleting item profit margin:`,e),e}}async getTrashedItemProfitMargins(e){try{let t=this.buildQueryParams(e),n=await r(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed item profit margins...`});return{data:n.data.data,pagination:n.data.pagination}}catch(e){throw console.error(`Error fetching trashed item profit margins:`,e),e}}async restoreItemProfitMargin(e){try{let t=await i(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring item profit margin:`,e),e}}async forceDeleteItemProfitMargin(e){try{await n(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting item profit margin...`,showSuccessNotification:!0,successMessage:`Item profit margin permanently deleted`})}catch(e){throw console.error(`Error permanently deleting item profit margin:`,e),e}}async getItemProfitMarginsForSelect(){try{let e=await r(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,marginPercentage:e.margin_percentage,disabled:!1}))}catch(e){throw console.error(`Error fetching item profit margins for select:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=s(`itemProfitMargins`,()=>{let n=t([]),r=t(null),i=t([]),a=t(c()),o=t(!1),s=t({}),l=e(()=>n.value.filter(e=>e.is_active)),d=e(()=>n.value.filter(e=>!e.is_active)),f=e(()=>l.value.map(e=>({value:e.id,label:e.name,marginPercentage:e.margin_percentage,disabled:!1}))),p=async e=>{try{o.value=!0,e&&(s.value={...s.value,...e});let t=await u.getItemProfitMargins(s.value);n.value=t.data,a.value=t.pagination}catch(e){throw console.error(`Error fetching item profit margins:`,e),e}finally{o.value=!1}},m=async e=>{try{let t=await u.getItemProfitMargin(e);return r.value=t,t}catch(e){throw console.error(`Error fetching item profit margin:`,e),e}},h=async e=>{try{let t=await u.createItemProfitMargin(e);return n.value.unshift(t),a.value.total+=1,t}catch(e){throw console.error(`Error creating item profit margin:`,e),e}},g=async(e,t)=>{try{let i=await u.updateItemProfitMargin(e,t),a=n.value.findIndex(t=>t.id===e);return a!==-1&&(n.value[a]=i),r.value?.id===e&&(r.value=i),i}catch(e){throw console.error(`Error updating item profit margin:`,e),e}},_=async e=>{try{await u.deleteItemProfitMargin(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1),--a.value.total,r.value?.id===e&&(r.value=null)}catch(e){throw console.error(`Error deleting item profit margin:`,e),e}},v=async e=>{try{o.value=!0;let t=e||{},n=await u.getTrashedItemProfitMargins(t);i.value=n.data}catch(e){throw console.error(`Error fetching trashed item profit margins:`,e),e}finally{o.value=!1}},y=async e=>{try{let t=await u.restoreItemProfitMargin(e),r=i.value.findIndex(t=>t.id===e);return r!==-1&&i.value.splice(r,1),n.value.unshift(t),a.value.total+=1,t}catch(e){throw console.error(`Error restoring item profit margin:`,e),e}},b=async e=>{try{await u.forceDeleteItemProfitMargin(e);let t=i.value.findIndex(t=>t.id===e);t!==-1&&i.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting item profit margin:`,e),e}},x=e=>{s.value={...s.value,...e}},S=()=>{s.value={}},C=()=>{r.value=null},w=()=>{n.value=[],r.value=null,i.value=[],a.value=c(),s.value={},o.value=!1},T=async()=>{try{return await u.getItemProfitMarginsForSelect()}catch(e){return console.error(`Error fetching item profit margins for select:`,e),[]}};return{itemProfitMargins:n,currentItemProfitMargin:r,trashedItemProfitMargins:i,pagination:a,loading:o,filters:s,activeItemProfitMargins:l,inactiveItemProfitMargins:d,itemProfitMarginsForSelect:f,fetchItemProfitMargins:p,fetchItemProfitMargin:m,createItemProfitMargin:h,updateItemProfitMargin:g,deleteItemProfitMargin:_,fetchTrashedItemProfitMargins:v,restoreItemProfitMargin:y,forceDeleteItemProfitMargin:b,updateFilters:x,clearFilters:S,clearCurrentItemProfitMargin:C,reset:w,fetchItemProfitMarginsForSelect:T}});export{d as b};