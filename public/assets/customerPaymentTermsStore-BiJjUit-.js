import{a5 as e,a6 as t,a7 as n,a8 as r,a9 as i,aN as a,ag as o,ar as s}from"./index-C0jcYHVD.js";import{b as c}from"./tableUtils-BvWofAYZ.js";var l=class{baseUrl=`/setups/customers/payment-terms`;async getCustomerPaymentTerms(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}?${n}`,{loadingMessage:`Loading customer payment terms...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching customer payment terms:`,e),e}}async getCustomerPaymentTerm(e){try{let n=await t(`${this.baseUrl}/${e}`,{loadingMessage:`Loading customer Payment Term...`});return n.data.data}catch(e){throw console.error(`Error fetching customer Payment Term:`,e),e}}async createCustomerPaymentTerm(e){try{let t=await r(this.baseUrl,e,{loadingMessage:`Creating customer payment term...`,showSuccessNotification:!0,successMessage:`Customer payment term created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer payment term:`,e),e}}async updateCustomerPaymentTerm(e,t){try{let n=await i(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer payment term...`,showSuccessNotification:!0,successMessage:`CustomerPaymentTerm updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer payment term:`,e),e}}async deleteCustomerPaymentTerm(t){try{await e(`${this.baseUrl}/${t}`,{loadingMessage:`Deleting customer payment term...`,showSuccessNotification:!0,successMessage:`Customer Payment Term deleted successfully`})}catch(e){throw console.error(`Error deleting customer payment term:`,e),e}}async getTrashedCustomerPaymentTerms(e){try{let n=this.buildQueryParams(e),r=await t(`${this.baseUrl}/trashed?${n}`,{loadingMessage:`Loading trashed customer payment term...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed customer payment term:`,e),e}}async restoreCustomerPaymentTerm(e){try{let t=await n(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring customer payment term...`,showSuccessNotification:!0,successMessage:`CustomerPaymentTerm restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring customer payment term:`,e),e}}async forceDeleteCustomerPaymentTerm(t){try{await e(`${this.baseUrl}/${t}/force-delete`,{loadingMessage:`Permanently deleting customer payment term...`,showSuccessNotification:!0,successMessage:`CustomerPaymentTerm permanently deleted`})}catch(e){throw console.error(`Error permanently deleting customer payment term:`,e),e}}async getCustomerPaymentTermsForSelect(){try{let e=await t(`${this.baseUrl}`,{showLoading:!1}),n=e.data.data;return n.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1}))}catch(e){throw console.error(`Error fetching customer payment term for select:`,e),e}}async getCustomerPaymentTermHierarchy(){try{let e=await t(`${this.baseUrl}/hierarchy`,{loadingMessage:`Loading customer payment term hierarchy...`});return e.data.data}catch(e){throw console.error(`Error fetching customer payment term hierarchy:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=o(`customerPaymentTerms`,()=>{let e=a([]),t=a([]),n=a(null),r=a([]),i=a(c()),o=a(!1),l=a({}),d=s(()=>e.value.filter(e=>e.is_active)),f=s(()=>e.value.filter(e=>!e.is_active)),p=s(()=>d.value.map(e=>({value:e.id,label:e.name,disabled:!1}))),m=async t=>{try{o.value=!0,t&&(l.value={...l.value,...t});let n=await u.getCustomerPaymentTerms(l.value);e.value=n.data,i.value=n.pagination}catch(e){throw console.error(`Error fetching customer payment terms:`,e),e}finally{o.value=!1}},h=async e=>{try{let t=await u.getCustomerPaymentTerm(e);return n.value=t,t}catch(e){throw console.error(`Error fetching customer payment term:`,e),e}},g=async t=>{try{let n=await u.createCustomerPaymentTerm(t);return e.value.unshift(n),i.value.total+=1,n}catch(e){throw console.error(`Error creating customer payment term:`,e),e}},_=async(t,r)=>{try{let i=await u.updateCustomerPaymentTerm(t,r),a=e.value.findIndex(e=>e.id===t);return a!==-1&&(e.value[a]=i),n.value?.id===t&&(n.value=i),i}catch(e){throw console.error(`Error updating customer payment term:`,e),e}},v=async t=>{try{await u.deleteCustomerPaymentTerm(t);let r=e.value.findIndex(e=>e.id===t);r!==-1&&e.value.splice(r,1),--i.value.total,n.value?.id===t&&(n.value=null)}catch(e){throw console.error(`Error deleting customer payment term:`,e),e}},y=async e=>{try{o.value=!0;let t=e||{},n=await u.getTrashedCustomerPaymentTerms(t);r.value=n.data}catch(e){throw console.error(`Error fetching trashed customer payment terms:`,e),e}finally{o.value=!1}},b=async t=>{try{let n=await u.restoreCustomerPaymentTerm(t),a=r.value.findIndex(e=>e.id===t);return a!==-1&&r.value.splice(a,1),e.value.unshift(n),i.value.total+=1,n}catch(e){throw console.error(`Error restoring customer payment term:`,e),e}},x=async e=>{try{await u.forceDeleteCustomerPaymentTerm(e);let t=r.value.findIndex(t=>t.id===e);t!==-1&&r.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting customer payment term:`,e),e}},S=e=>{l.value={...l.value,...e}},C=()=>{l.value={}},w=()=>{n.value=null},T=()=>{e.value=[],t.value=[],n.value=null,r.value=[],i.value=c(),l.value={},o.value=!1},E=async()=>{try{await u.getCustomerPaymentTermsForSelect();let e=await u.getCustomerPaymentTerms({per_page:1e3,is_active:!0});return t.value=e.data,t.value}catch(e){return console.error(`Error fetching customer payment terms for select:`,e),[]}};return{customerPaymentTerms:e,customerPaymentTermsSelect:t,currentCustomerPaymentTerm:n,trashedCustomerPaymentTerms:r,pagination:i,loading:o,filters:l,activeCustomerPaymentTerms:d,inactiveCustomerPaymentTerms:f,customerPaymentTermsForSelect:p,fetchCustomerPaymentTerms:m,fetchCustomerPaymentTerm:h,createCustomerPaymentTerm:g,updateCustomerPaymentTerm:_,deleteCustomerPaymentTerm:v,fetchTrashedCustomerPaymentTerms:y,restoreCustomerPaymentTerm:b,forceDeleteCustomerPaymentTerm:x,updateFilters:S,clearFilters:C,clearCurrentCustomerPaymentTerm:w,reset:T,fetchCustomerPaymentTermsForSelect:E}});export{d as b};