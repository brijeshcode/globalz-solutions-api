import{$ as e,X as t,Y as n,Z as r,_ as i,a5 as a,a6 as o,a7 as s,aA as c,aE as l,ai as u}from"./index-BIyxVvFe.js";import{b as d}from"./tableUtils-DX_RsmET.js";var f=class{baseUrl=`/customers`;async getCustomers(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}?${t}`,{loadingMessage:`Loading customers...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching customers:`,e),e}}async getCustomer(e){try{let t=await n(`${this.baseUrl}/${e}`,{loadingMessage:`Loading customer...`});return t.data.data}catch(e){throw console.error(`Error fetching customer:`,e),e}}async createCustomer(e){try{let t=await i(this.baseUrl,e,{loadingMessage:`Creating customer...`,showSuccessNotification:!0,successMessage:`Customer created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer:`,e),e}}async createCustomerWithFiles(e){try{console.log(`reach service`);let t=await i(this.baseUrl,e,{loadingMessage:`Creating customer...`,showSuccessNotification:!0,successMessage:`Customer created successfully`});return t.data.data}catch(e){throw console.error(`Error creating customer with files:`,e),e}}async updateCustomer(t,n){try{let r=await e(`${this.baseUrl}/${t}`,n,{loadingMessage:`Updating customer...`,showSuccessNotification:!0,successMessage:`Customer updated successfully`});return r.data.data}catch(e){throw console.error(`Error updating customer:`,e),e}}async updateCustomerWithFiles(e,t){try{let n=await i(`${this.baseUrl}/${e}`,t,{loadingMessage:`Updating customer...`,showSuccessNotification:!0,successMessage:`Customer updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer with files:`,e),e}}async deleteCustomer(e){try{await t(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting customer...`,showSuccessNotification:!0,successMessage:`Customer deleted successfully`})}catch(e){throw console.error(`Error deleting customer:`,e),e}}async getTrashedCustomers(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed customers...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed customers:`,e),e}}async restoreCustomer(e){try{let t=await r(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring customer...`,showSuccessNotification:!0,successMessage:`Customer restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring customer:`,e),e}}async forceDeleteCustomer(e){try{await t(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting customer...`,showSuccessNotification:!0,successMessage:`Customer permanently deleted`})}catch(e){throw console.error(`Error permanently deleting customer:`,e),e}}async getCustomersForSelect(){try{let e=await n(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.filter(e=>e.is_active).map(e=>({value:e.id,label:e.name,disabled:!1,code:e.code,balance:e.current_balance}))}catch(e){throw console.error(`Error fetching customers for select:`,e),e}}async getCustomerStats(){try{let e=await n(`${this.baseUrl}/stats`,{loadingMessage:`Loading customer statistics...`});return e.data.data}catch(e){throw console.error(`Error fetching customer statistics:`,e),e}}async exportCustomers(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}/export?${t}`,{loadingMessage:`Exporting customers...`,responseType:`blob`});return r.data}catch(e){throw console.error(`Error exporting customers:`,e),e}}async getNextCustomerCode(){try{let e=await n(`${this.baseUrl}/next-code`,{showLoading:!1});return e.data.data.code}catch(e){throw console.error(`Error fetching next customer code:`,e),e}}async getSalespersons(){try{let e=await n(`${this.baseUrl}/salespersons`,{showLoading:!1});return e.data.data}catch(e){throw console.error(`Error fetching salespersons:`,e),e}}async searchCustomers(e){try{let t=await n(`${this.baseUrl}/search?query=${encodeURIComponent(e)}`,{showLoading:!1});return t.data.data}catch(e){throw console.error(`Error searching customers:`,e),e}}async getCustomersByType(e){try{let t=await n(`${this.baseUrl}/by-type/${e}`,{loadingMessage:`Loading customers by type...`});return t.data.data}catch(e){throw console.error(`Error fetching customers by type:`,e),e}}async getCustomersByZone(e){try{let t=await n(`${this.baseUrl}/by-zone/${e}`,{loadingMessage:`Loading customers by zone...`});return t.data.data}catch(e){throw console.error(`Error fetching customers by zone:`,e),e}}async getCustomersBySalesperson(e){try{let t=await n(`${this.baseUrl}/by-salesperson/${e}`,{loadingMessage:`Loading customers by salesperson...`});return t.data.data}catch(e){throw console.error(`Error fetching customers by salesperson:`,e),e}}async updateCustomerBalance(e,t){try{let n=await i(`${this.baseUrl}/${e}/balance`,t,{loadingMessage:`Updating customer balance...`,showSuccessNotification:!0,successMessage:`Customer balance updated successfully`});return n.data.data}catch(e){throw console.error(`Error updating customer balance:`,e),e}}async getCustomerBalanceHistory(e){try{let t=await n(`${this.baseUrl}/${e}/balance-history`,{loadingMessage:`Loading balance history...`});return t.data.data}catch(e){throw console.error(`Error fetching customer balance history:`,e),e}}async getCustomerChildren(e){try{let t=await n(`${this.baseUrl}/${e}/children`,{loadingMessage:`Loading customer children...`});return t.data.data}catch(e){throw console.error(`Error fetching customer children:`,e),e}}async checkCreditLimit(e){try{let t=await n(`${this.baseUrl}/${e}/credit-status`,{showLoading:!1});return t.data.data}catch(e){throw console.error(`Error checking credit limit:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const p=new f,m=s(`customers`,()=>{let e=o(),t=a(),n=l([]),r=l(null),i=l([]),s=l(null),f=l([]),m=l(d()),h=l(!1),g=l({}),_=u(()=>n.value.filter(e=>e.is_active)),v=u(()=>n.value.filter(e=>!e.is_active)),y=u(()=>_.value.map(e=>({value:e.id,label:e.name,disabled:!1,code:e.code,balance:e.current_balance}))),ee=u(()=>e=>n.value.filter(t=>t.customer_type_id===e)),te=u(()=>e=>n.value.filter(t=>t.customer_zone_id===e)),b=u(()=>e=>n.value.filter(t=>t.salesperson_id===e)),x=u(()=>n.value.filter(e=>e.is_over_credit_limit)),S=u(()=>n.value.filter(e=>e.current_balance!==0)),C=u(()=>{let e={};return Object.entries(t.query).forEach(([t,n])=>{n&&typeof n==`string`&&(e[t]=n)}),e}),w=async e=>{try{h.value=!0,e&&(g.value={...g.value,...e});let t=await p.getCustomers(g.value);n.value=t.data,m.value=t.pagination}catch(e){throw console.error(`Error fetching customers:`,e),e}finally{h.value=!1}},T=async e=>{try{let t=await p.getCustomer(e);return r.value=t,t}catch(e){throw console.error(`Error fetching customer:`,e),e}},E=async e=>{try{let t=await p.createCustomer(e);return n.value.unshift(t),m.value.total+=1,t}catch(e){throw console.error(`Error creating customer:`,e),e}},D=async e=>{try{console.log(`reach stored`);let t=await p.createCustomerWithFiles(e);return n.value.unshift(t),m.value.total+=1,t}catch(e){throw console.error(`Error creating customer with files:`,e),e}},O=async(e,t)=>{try{let i=await p.updateCustomer(e,t),a=n.value.findIndex(t=>t.id===e);return a!==-1&&(n.value[a]=i),r.value?.id===e&&(r.value=i),i}catch(e){throw console.error(`Error updating customer:`,e),e}},k=async(e,t)=>{try{let i=await p.updateCustomerWithFiles(e,t),a=n.value.findIndex(t=>t.id===e);return a!==-1&&(n.value[a]=i),r.value?.id===e&&(r.value=i),i}catch(e){throw console.error(`Error updating customer with files:`,e),e}},A=async e=>{try{await p.deleteCustomer(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1),--m.value.total,r.value?.id===e&&(r.value=null)}catch(e){throw console.error(`Error deleting customer:`,e),e}},j=async e=>{try{h.value=!0;let t=e||{},n=await p.getTrashedCustomers(t);i.value=n.data}catch(e){throw console.error(`Error fetching trashed customers:`,e),e}finally{h.value=!1}},M=async e=>{try{let t=await p.restoreCustomer(e),r=i.value.findIndex(t=>t.id===e);return r!==-1&&i.value.splice(r,1),n.value.unshift(t),m.value.total+=1,t}catch(e){throw console.error(`Error restoring customer:`,e),e}},N=async e=>{try{await p.forceDeleteCustomer(e);let t=i.value.findIndex(t=>t.id===e);t!==-1&&i.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting customer:`,e),e}},P=async()=>{try{let e=await p.getCustomerStats();return s.value=e,e}catch(e){throw console.error(`Error fetching customer statistics:`,e),e}},F=async()=>{try{let e=await p.getSalespersons();return f.value=e,e}catch(e){throw console.error(`Error fetching salespersons:`,e),e}},ne=async()=>{try{return await p.getNextCustomerCode()}catch(e){throw console.error(`Error getting next customer code:`,e),e}},I=async e=>{try{return await p.exportCustomers(e)}catch(e){throw console.error(`Error exporting customers:`,e),e}},L=async e=>{try{return await p.searchCustomers(e)}catch(e){throw console.error(`Error searching customers:`,e),e}},R=async(e,t)=>{try{let i=await p.updateCustomerBalance(e,t),a=n.value.findIndex(t=>t.id===e);return a!==-1&&(n.value[a]=i),r.value?.id===e&&(r.value=i),i}catch(e){throw console.error(`Error updating customer balance:`,e),e}},z=async e=>{try{return await p.getCustomerBalanceHistory(e)}catch(e){throw console.error(`Error fetching customer balance history:`,e),e}},B=async e=>{try{return await p.checkCreditLimit(e)}catch(e){throw console.error(`Error checking customer credit limit:`,e),e}},V=async e=>{try{return await p.getCustomerChildren(e)}catch(e){throw console.error(`Error fetching customer children:`,e),e}},H=async()=>{try{return await p.getCustomersForSelect()}catch(e){return console.error(`Error fetching customers for select:`,e),[]}},U=e=>{g.value={...g.value,...e}},W=()=>{g.value={}},G=()=>{r.value=null},K=e=>{let t={...g.value,search:e,page:1};g.value=t,X(t),$(t,!1)},q=(e,t)=>{let n={...g.value,sort_by:e,sort_direction:t,page:1};g.value=n,X(n),$(n,!1)},J=e=>{let t={...g.value,page:e};g.value=t,X(t),$(t,!1)},Y=e=>{let t={...g.value,per_page:e,page:1};g.value=t,X(t),$(t,!1)},X=(n,r=!1)=>{let i={...t.query};Object.entries(n).forEach(([e,t])=>{t!=null&&t!==``?i[e]=String(t):delete i[e]});let a=r?`replace`:`push`;e[a]({query:i})},Z=()=>{e.replace({query:{}})},Q=()=>{g.value={...C.value}},$=async(e,t=!0)=>{t&&e&&X(e),await w(e)},re=()=>{n.value=[],r.value=null,i.value=[],s.value=null,f.value=[],m.value=d(),g.value={},h.value=!1};return c(()=>t.query,async()=>{if(Q(),t.name&&t.name.toString().includes(`customer`))try{await w(g.value)}catch(e){console.error(`Error fetching customers on URL change:`,e)}},{immediate:!1,deep:!0}),{customers:n,currentCustomer:r,trashedCustomers:i,customerStats:s,salespersons:f,pagination:m,loading:h,filters:g,activeCustomers:_,inactiveCustomers:v,customersForSelect:y,customersByType:ee,customersByZone:te,customersBySalesperson:b,customersOverCreditLimit:x,customersWithBalance:S,urlParams:C,fetchCustomers:w,fetchCustomer:T,createCustomer:E,createCustomerWithFiles:D,updateCustomer:O,updateCustomerWithFiles:k,deleteCustomer:A,fetchTrashedCustomers:j,restoreCustomer:M,forceDeleteCustomer:N,fetchCustomerStats:P,fetchSalespersons:F,getNextCustomerCode:ne,exportCustomers:I,searchCustomers:L,updateCustomerBalance:R,getCustomerBalanceHistory:z,checkCustomerCreditLimit:B,getCustomerChildren:V,fetchCustomersForSelect:H,updateFilters:U,clearFilters:W,clearCurrentCustomer:G,setSearch:K,setSort:q,setPage:J,setPerPage:Y,updateUrlParams:X,clearUrlParams:Z,syncFiltersWithUrl:Q,fetchData:$,reset:re}});export{m as b};