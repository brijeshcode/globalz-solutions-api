import{$ as e,X as t,Y as n,Z as r,_ as i,a7 as a,aE as o,ai as s}from"./index-BIyxVvFe.js";import{b as c}from"./tableUtils-DX_RsmET.js";var l=class{baseUrl=`/setups/currencies`;async getCurrencies(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}?${t}`,{loadingMessage:`Loading currencies...`,showLoading:!0});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching currencies:`,e),e}}async getCurrency(e){try{let t=await n(`${this.baseUrl}/${e}`,{loadingMessage:`Loading currency...`});return t.data.data}catch(e){throw console.error(`Error fetching currency:`,e),e}}async createCurrency(e){try{let t=await i(this.baseUrl,e,{loadingMessage:`Creating currency...`,showSuccessNotification:!0,successMessage:`Currency created successfully`});return t.data.data}catch(e){throw console.error(`Error creating currency:`,e),e}}async updateCurrency(t,n){try{let r=await e(`${this.baseUrl}/${t}`,n,{loadingMessage:`Updating currency...`,showSuccessNotification:!0,successMessage:`Currency updated successfully`});return r.data.data}catch(e){throw console.error(`Error updating currency:`,e),e}}async deleteCurrency(e){try{await t(`${this.baseUrl}/${e}`,{loadingMessage:`Deleting currency...`,showSuccessNotification:!0,successMessage:`Currency deleted successfully`})}catch(e){throw console.error(`Error deleting currency:`,e),e}}async getTrashedCurrencies(e){try{let t=this.buildQueryParams(e),r=await n(`${this.baseUrl}/trashed?${t}`,{loadingMessage:`Loading trashed currencies...`});return{data:r.data.data,pagination:r.data.pagination}}catch(e){throw console.error(`Error fetching trashed currencies:`,e),e}}async restoreCurrency(e){try{let t=await r(`${this.baseUrl}/${e}/restore`,{},{loadingMessage:`Restoring currency...`,showSuccessNotification:!0,successMessage:`Currency restored successfully`});return t.data.data}catch(e){throw console.error(`Error restoring currency:`,e),e}}async forceDeleteCurrency(e){try{await t(`${this.baseUrl}/${e}/force-delete`,{loadingMessage:`Permanently deleting currency...`,showSuccessNotification:!0,successMessage:`Currency permanently deleted`})}catch(e){throw console.error(`Error permanently deleting currency:`,e),e}}async getCurrenciesForSelect(){try{let e=await n(`${this.baseUrl}`,{showLoading:!1}),t=e.data.data;return t.map(e=>({value:e.id,label:`${e.name} (${e.code})`,disabled:!1}))}catch(e){throw console.error(`Error fetching currencies for select:`,e),e}}async changeRates(e){try{let t=await i(`${this.baseUrl}/rates/change`,{rates:e},{loadingMessage:`Updating currency rates...`,showSuccessNotification:!0,successMessage:`Currency rates updated successfully`});return t.data.data}catch(e){throw console.error(`Error changing currency rates:`,e),e}}buildQueryParams(e){if(!e)return``;let t=new URLSearchParams;return Object.entries(e).forEach(([e,n])=>{n!=null&&n!==``&&t.append(e,String(n))}),t.toString()}};const u=new l,d=a(`currencies`,()=>{let e=o([]),t=o(null),n=o([]),r=o(c()),i=o(!1),a=o({}),l=s(()=>e.value.map(e=>({value:e.id,label:`${e.name} (${e.code})`,disabled:!1}))),d=async t=>{try{i.value=!0,t&&(a.value={...a.value,...t});let n=await u.getCurrencies(a.value);e.value=n.data,r.value=n.pagination}catch(e){throw console.error(`Error fetching currencies:`,e),e}finally{i.value=!1}},f=async e=>{try{let n=await u.getCurrency(e);return t.value=n,n}catch(e){throw console.error(`Error fetching currency:`,e),e}},p=async t=>{try{let n=await u.createCurrency(t);return e.value.unshift(n),r.value.total+=1,n}catch(e){throw console.error(`Error creating currency:`,e),e}},m=async(n,r)=>{try{let i=await u.updateCurrency(n,r),a=e.value.findIndex(e=>e.id===n);return a!==-1&&(e.value[a]=i),t.value?.id===n&&(t.value=i),i}catch(e){throw console.error(`Error updating currency:`,e),e}},h=async n=>{try{await u.deleteCurrency(n);let i=e.value.findIndex(e=>e.id===n);i!==-1&&e.value.splice(i,1),--r.value.total,t.value?.id===n&&(t.value=null)}catch(e){throw console.error(`Error deleting currency:`,e),e}},g=async e=>{try{i.value=!0;let t=e||{},r=await u.getTrashedCurrencies(t);n.value=r.data}catch(e){throw console.error(`Error fetching trashed currencies:`,e),e}finally{i.value=!1}},_=async t=>{try{let i=await u.restoreCurrency(t),a=n.value.findIndex(e=>e.id===t);return a!==-1&&n.value.splice(a,1),e.value.unshift(i),r.value.total+=1,i}catch(e){throw console.error(`Error restoring currency:`,e),e}},v=async e=>{try{await u.forceDeleteCurrency(e);let t=n.value.findIndex(t=>t.id===e);t!==-1&&n.value.splice(t,1)}catch(e){throw console.error(`Error permanently deleting currency:`,e),e}},y=e=>{a.value={...a.value,...e}},b=()=>{a.value={}},x=()=>{t.value=null},S=()=>{e.value=[],t.value=null,n.value=[],r.value=c(),a.value={},i.value=!1},C=async()=>{try{return await u.getCurrenciesForSelect()}catch(e){return console.error(`Error fetching currencies for select:`,e),[]}},w=async e=>{try{let t=await u.changeRates(e);return t}catch(e){throw console.error(`Error changing currency rates:`,e),e}};return{currencies:e,currentCurrency:t,trashedCurrencies:n,pagination:r,loading:i,filters:a,currenciesForSelect:l,fetchCurrencies:d,fetchCurrency:f,createCurrency:p,updateCurrency:m,deleteCurrency:h,fetchTrashedCurrencies:g,restoreCurrency:_,forceDeleteCurrency:v,updateFilters:y,clearFilters:b,clearCurrentCurrency:x,reset:S,fetchCurrenciesForSelect:C,changeRates:w}});var f=d;export{f as b,d as c};